plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.7.20"
    id "io.qameta.allure" version "2.9.3"
}

group "com.makrol"
version "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

ext {
    allureVersion = "2.20.1"
    junitVersion = "5.9.1"
    hopliteVersion = "2.7.0"
    okhttpVersion = "2.7.5"
}

sourceCompatibility = "18"
targetCompatibility = "18"

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

[compileKotlin, compileTestKotlin].forEach {
    it.kotlinOptions {
        jvmTarget = "11"
    }
}

dependencies {
    //open api client generation
    implementation("io.gsonfire:gson-fire:1.8.5")
    implementation("com.squareup.okhttp:okhttp:${okhttpVersion}")
    implementation("com.squareup.okhttp:logging-interceptor:${okhttpVersion}")
    implementation("javax.annotation:javax.annotation-api:1.3.2")
    implementation("io.swagger:swagger-annotations:1.5.24")
    implementation("org.threeten:threetenbp:1.3.6")

    //UI models implementation
    implementation("com.codeborne:selenide:6.10.1")

    //Tests organization
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    //Assertions
    testImplementation("org.assertj:assertj-core:3.23.1")

    //Logging & Reporting
    implementation("io.github.microutils:kotlin-logging-jvm:3.0.4")
    implementation("org.slf4j:slf4j-simple:2.0.5")
    testImplementation("io.qameta.allure:allure-selenide:${allureVersion}")

    //configuration
    implementation("com.sksamuel.hoplite:hoplite-core:${hopliteVersion}")
    implementation("com.sksamuel.hoplite:hoplite-json:${hopliteVersion}")

    //Utilities
    implementation("org.jetbrains.kotlin:kotlin-reflect:1.7.20")
}

test {
    useJUnitPlatform()
}
allure {
    version = "${allureVersion}"

    useJUnit5 {
        version = "${allureVersion}"
    }
}