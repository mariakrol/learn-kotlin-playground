/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.makrol.teamcity.api.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents a locator string for filtering BuildType entities.
 */
@ApiModel(description = "Represents a locator string for filtering BuildType entities.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-14T01:07:21.722+03:00")
public class BuildTypeLocator {
  @SerializedName("affectedProject")
  private String affectedProject = null;

  @SerializedName("build")
  private String build = null;

  @SerializedName("count")
  private Integer count = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("internalId")
  private String internalId = null;

  @SerializedName("item")
  private String item = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("paused")
  private Boolean paused = null;

  @SerializedName("project")
  private String project = null;

  @SerializedName("start")
  private Integer start = null;

  @SerializedName("template")
  private String template = null;

  @SerializedName("templateFlag")
  private Boolean templateFlag = null;

  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("vcsRoot")
  private String vcsRoot = null;

  @SerializedName("vcsRootInstance")
  private String vcsRootInstance = null;

  public BuildTypeLocator affectedProject(String affectedProject) {
    this.affectedProject = affectedProject;
    return this;
  }

   /**
   * Project (direct or indirect parent) locator.
   * @return affectedProject
  **/
  @ApiModelProperty(value = "Project (direct or indirect parent) locator.")
  public String getAffectedProject() {
    return affectedProject;
  }

  public void setAffectedProject(String affectedProject) {
    this.affectedProject = affectedProject;
  }

  public BuildTypeLocator build(String build) {
    this.build = build;
    return this;
  }

   /**
   * Build locator.
   * @return build
  **/
  @ApiModelProperty(value = "Build locator.")
  public String getBuild() {
    return build;
  }

  public void setBuild(String build) {
    this.build = build;
  }

  public BuildTypeLocator count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * For paginated calls, how many entities to return per page.
   * @return count
  **/
  @ApiModelProperty(value = "For paginated calls, how many entities to return per page.")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public BuildTypeLocator id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public BuildTypeLocator internalId(String internalId) {
    this.internalId = internalId;
    return this;
  }

   /**
   * Get internalId
   * @return internalId
  **/
  @ApiModelProperty(value = "")
  public String getInternalId() {
    return internalId;
  }

  public void setInternalId(String internalId) {
    this.internalId = internalId;
  }

  public BuildTypeLocator item(String item) {
    this.item = item;
    return this;
  }

   /**
   * Supply multiple locators and return a union of the results.
   * @return item
  **/
  @ApiModelProperty(value = "Supply multiple locators and return a union of the results.")
  public String getItem() {
    return item;
  }

  public void setItem(String item) {
    this.item = item;
  }

  public BuildTypeLocator name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public BuildTypeLocator paused(Boolean paused) {
    this.paused = paused;
    return this;
  }

   /**
   * Is paused.
   * @return paused
  **/
  @ApiModelProperty(value = "Is paused.")
  public Boolean isPaused() {
    return paused;
  }

  public void setPaused(Boolean paused) {
    this.paused = paused;
  }

  public BuildTypeLocator project(String project) {
    this.project = project;
    return this;
  }

   /**
   * Project (direct parent) locator.
   * @return project
  **/
  @ApiModelProperty(value = "Project (direct parent) locator.")
  public String getProject() {
    return project;
  }

  public void setProject(String project) {
    this.project = project;
  }

  public BuildTypeLocator start(Integer start) {
    this.start = start;
    return this;
  }

   /**
   * For paginated calls, from which entity to start rendering the page.
   * @return start
  **/
  @ApiModelProperty(value = "For paginated calls, from which entity to start rendering the page.")
  public Integer getStart() {
    return start;
  }

  public void setStart(Integer start) {
    this.start = start;
  }

  public BuildTypeLocator template(String template) {
    this.template = template;
    return this;
  }

   /**
   * Base template locator.
   * @return template
  **/
  @ApiModelProperty(value = "Base template locator.")
  public String getTemplate() {
    return template;
  }

  public void setTemplate(String template) {
    this.template = template;
  }

  public BuildTypeLocator templateFlag(Boolean templateFlag) {
    this.templateFlag = templateFlag;
    return this;
  }

   /**
   * Is a template.
   * @return templateFlag
  **/
  @ApiModelProperty(value = "Is a template.")
  public Boolean isTemplateFlag() {
    return templateFlag;
  }

  public void setTemplateFlag(Boolean templateFlag) {
    this.templateFlag = templateFlag;
  }

  public BuildTypeLocator uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @ApiModelProperty(value = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public BuildTypeLocator vcsRoot(String vcsRoot) {
    this.vcsRoot = vcsRoot;
    return this;
  }

   /**
   * VCS root locator.
   * @return vcsRoot
  **/
  @ApiModelProperty(value = "VCS root locator.")
  public String getVcsRoot() {
    return vcsRoot;
  }

  public void setVcsRoot(String vcsRoot) {
    this.vcsRoot = vcsRoot;
  }

  public BuildTypeLocator vcsRootInstance(String vcsRootInstance) {
    this.vcsRootInstance = vcsRootInstance;
    return this;
  }

   /**
   * VCS root instance locator.
   * @return vcsRootInstance
  **/
  @ApiModelProperty(value = "VCS root instance locator.")
  public String getVcsRootInstance() {
    return vcsRootInstance;
  }

  public void setVcsRootInstance(String vcsRootInstance) {
    this.vcsRootInstance = vcsRootInstance;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuildTypeLocator buildTypeLocator = (BuildTypeLocator) o;
    return Objects.equals(this.affectedProject, buildTypeLocator.affectedProject) &&
        Objects.equals(this.build, buildTypeLocator.build) &&
        Objects.equals(this.count, buildTypeLocator.count) &&
        Objects.equals(this.id, buildTypeLocator.id) &&
        Objects.equals(this.internalId, buildTypeLocator.internalId) &&
        Objects.equals(this.item, buildTypeLocator.item) &&
        Objects.equals(this.name, buildTypeLocator.name) &&
        Objects.equals(this.paused, buildTypeLocator.paused) &&
        Objects.equals(this.project, buildTypeLocator.project) &&
        Objects.equals(this.start, buildTypeLocator.start) &&
        Objects.equals(this.template, buildTypeLocator.template) &&
        Objects.equals(this.templateFlag, buildTypeLocator.templateFlag) &&
        Objects.equals(this.uuid, buildTypeLocator.uuid) &&
        Objects.equals(this.vcsRoot, buildTypeLocator.vcsRoot) &&
        Objects.equals(this.vcsRootInstance, buildTypeLocator.vcsRootInstance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affectedProject, build, count, id, internalId, item, name, paused, project, start, template, templateFlag, uuid, vcsRoot, vcsRootInstance);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuildTypeLocator {\n");
    
    sb.append("    affectedProject: ").append(toIndentedString(affectedProject)).append("\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    internalId: ").append(toIndentedString(internalId)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    paused: ").append(toIndentedString(paused)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    templateFlag: ").append(toIndentedString(templateFlag)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    vcsRoot: ").append(toIndentedString(vcsRoot)).append("\n");
    sb.append("    vcsRootInstance: ").append(toIndentedString(vcsRootInstance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

