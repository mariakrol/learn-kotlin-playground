/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.makrol.teamcity.api.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.makrol.teamcity.api.swagger.client.model.Agent;
import com.makrol.teamcity.api.swagger.client.model.Agents;
import com.makrol.teamcity.api.swagger.client.model.ApprovalInfo;
import com.makrol.teamcity.api.swagger.client.model.ArtifactDependencies;
import com.makrol.teamcity.api.swagger.client.model.Build;
import com.makrol.teamcity.api.swagger.client.model.BuildChanges;
import com.makrol.teamcity.api.swagger.client.model.BuildTriggeringOptions;
import com.makrol.teamcity.api.swagger.client.model.BuildType;
import com.makrol.teamcity.api.swagger.client.model.Builds;
import com.makrol.teamcity.api.swagger.client.model.Changes;
import com.makrol.teamcity.api.swagger.client.model.Comment;
import com.makrol.teamcity.api.swagger.client.model.Customizations;
import com.makrol.teamcity.api.swagger.client.model.Datas;
import com.makrol.teamcity.api.swagger.client.model.DownloadedArtifacts;
import com.makrol.teamcity.api.swagger.client.model.Entries;
import com.makrol.teamcity.api.swagger.client.model.Files;
import com.makrol.teamcity.api.swagger.client.model.IssuesUsages;
import com.makrol.teamcity.api.swagger.client.model.Items;
import com.makrol.teamcity.api.swagger.client.model.Links;
import com.makrol.teamcity.api.swagger.client.model.ProblemOccurrences;
import com.makrol.teamcity.api.swagger.client.model.ProgressInfo;
import com.makrol.teamcity.api.swagger.client.model.Properties;
import com.makrol.teamcity.api.swagger.client.model.Related;
import com.makrol.teamcity.api.swagger.client.model.Revision;
import com.makrol.teamcity.api.swagger.client.model.Revisions;
import com.makrol.teamcity.api.swagger.client.model.Tags;
import com.makrol.teamcity.api.swagger.client.model.TestOccurrences;
import com.makrol.teamcity.api.swagger.client.model.TriggeredBy;
import com.makrol.teamcity.api.swagger.client.model.User;
import com.makrol.teamcity.api.swagger.client.model.VcsLabel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Represents a build instance.
 */
@ApiModel(description = "Represents a build instance.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-14T01:07:21.722+03:00")
public class Build {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("taskId")
  private Long taskId = null;

  @SerializedName("buildTypeId")
  private String buildTypeId = null;

  @SerializedName("buildTypeInternalId")
  private String buildTypeInternalId = null;

  @SerializedName("number")
  private String number = null;

  @SerializedName("status")
  private String status = null;

  /**
   * Gets or Sets state
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    QUEUED("queued"),
    
    FINISHED("finished"),
    
    RUNNING("running"),
    
    DELETED("deleted"),
    
    UNKNOWN("unknown");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("running")
  private Boolean running = null;

  @SerializedName("composite")
  private Boolean composite = null;

  @SerializedName("failedToStart")
  private Boolean failedToStart = null;

  @SerializedName("personal")
  private Boolean personal = null;

  @SerializedName("percentageComplete")
  private Integer percentageComplete = null;

  @SerializedName("branchName")
  private String branchName = null;

  @SerializedName("defaultBranch")
  private Boolean defaultBranch = null;

  @SerializedName("unspecifiedBranch")
  private Boolean unspecifiedBranch = null;

  @SerializedName("history")
  private Boolean history = null;

  @SerializedName("pinned")
  private Boolean pinned = null;

  @SerializedName("href")
  private String href = null;

  @SerializedName("webUrl")
  private String webUrl = null;

  @SerializedName("queuePosition")
  private Integer queuePosition = null;

  @SerializedName("limitedChangesCount")
  private Integer limitedChangesCount = null;

  @SerializedName("artifactsDirectory")
  private String artifactsDirectory = null;

  @SerializedName("links")
  private Links links = null;

  @SerializedName("statusText")
  private String statusText = null;

  @SerializedName("buildType")
  private BuildType buildType = null;

  @SerializedName("comment")
  private Comment comment = null;

  @SerializedName("tags")
  private Tags tags = null;

  @SerializedName("pinInfo")
  private Comment pinInfo = null;

  @SerializedName("user")
  private User user = null;

  @SerializedName("startEstimate")
  private String startEstimate = null;

  @SerializedName("waitReason")
  private String waitReason = null;

  @SerializedName("finishEstimate")
  private String finishEstimate = null;

  @SerializedName("delayedByBuild")
  private Build delayedByBuild = null;

  @SerializedName("plannedAgent")
  private Agent plannedAgent = null;

  @SerializedName("approvalInfo")
  private ApprovalInfo approvalInfo = null;

  @SerializedName("running-info")
  private ProgressInfo runningInfo = null;

  @SerializedName("canceledInfo")
  private Comment canceledInfo = null;

  @SerializedName("queuedDate")
  private String queuedDate = null;

  @SerializedName("startDate")
  private String startDate = null;

  @SerializedName("finishDate")
  private String finishDate = null;

  @SerializedName("triggered")
  private TriggeredBy triggered = null;

  @SerializedName("lastChanges")
  private Changes lastChanges = null;

  @SerializedName("changes")
  private Changes changes = null;

  @SerializedName("revisions")
  private Revisions revisions = null;

  @SerializedName("versionedSettingsRevision")
  private Revision versionedSettingsRevision = null;

  @SerializedName("artifactDependencyChanges")
  private BuildChanges artifactDependencyChanges = null;

  @SerializedName("agent")
  private Agent agent = null;

  @SerializedName("compatibleAgents")
  private Agents compatibleAgents = null;

  @SerializedName("testOccurrences")
  private TestOccurrences testOccurrences = null;

  @SerializedName("problemOccurrences")
  private ProblemOccurrences problemOccurrences = null;

  @SerializedName("artifacts")
  private Files artifacts = null;

  @SerializedName("relatedIssues")
  private IssuesUsages relatedIssues = null;

  @SerializedName("properties")
  private Properties properties = null;

  @SerializedName("resultingProperties")
  private Properties resultingProperties = null;

  @SerializedName("attributes")
  private Entries attributes = null;

  @SerializedName("statistics")
  private Properties statistics = null;

  @SerializedName("metadata")
  private Datas metadata = null;

  @SerializedName("snapshot-dependencies")
  private Builds snapshotDependencies = null;

  @SerializedName("artifact-dependencies")
  private Builds artifactDependencies = null;

  @SerializedName("custom-artifact-dependencies")
  private ArtifactDependencies customArtifactDependencies = null;

  @SerializedName("settingsHash")
  private String settingsHash = null;

  @SerializedName("currentSettingsHash")
  private String currentSettingsHash = null;

  @SerializedName("modificationId")
  private String modificationId = null;

  @SerializedName("chainModificationId")
  private String chainModificationId = null;

  @SerializedName("replacementIds")
  private Items replacementIds = null;

  @SerializedName("related")
  private Related related = null;

  @SerializedName("triggeringOptions")
  private BuildTriggeringOptions triggeringOptions = null;

  @SerializedName("usedByOtherBuilds")
  private Boolean usedByOtherBuilds = null;

  @SerializedName("statusChangeComment")
  private Comment statusChangeComment = null;

  @SerializedName("vcsLabels")
  private List<VcsLabel> vcsLabels = null;

  @SerializedName("detachedFromAgent")
  private Boolean detachedFromAgent = null;

  @SerializedName("finishOnAgentDate")
  private String finishOnAgentDate = null;

  @SerializedName("customized")
  private Boolean customized = null;

  @SerializedName("customization")
  private Customizations customization = null;

  @SerializedName("changesCollectingInProgress")
  private Boolean changesCollectingInProgress = null;

  @SerializedName("queuedWaitReasons")
  private Properties queuedWaitReasons = null;

  @SerializedName("downloadedArtifacts")
  private DownloadedArtifacts downloadedArtifacts = null;

  @SerializedName("firstBuildWithSameChanges")
  private Build firstBuildWithSameChanges = null;

  @SerializedName("locator")
  private String locator = null;

  public Build id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Build taskId(Long taskId) {
    this.taskId = taskId;
    return this;
  }

   /**
   * Get taskId
   * @return taskId
  **/
  @ApiModelProperty(value = "")
  public Long getTaskId() {
    return taskId;
  }

  public void setTaskId(Long taskId) {
    this.taskId = taskId;
  }

  public Build buildTypeId(String buildTypeId) {
    this.buildTypeId = buildTypeId;
    return this;
  }

   /**
   * Get buildTypeId
   * @return buildTypeId
  **/
  @ApiModelProperty(value = "")
  public String getBuildTypeId() {
    return buildTypeId;
  }

  public void setBuildTypeId(String buildTypeId) {
    this.buildTypeId = buildTypeId;
  }

  public Build buildTypeInternalId(String buildTypeInternalId) {
    this.buildTypeInternalId = buildTypeInternalId;
    return this;
  }

   /**
   * Get buildTypeInternalId
   * @return buildTypeInternalId
  **/
  @ApiModelProperty(value = "")
  public String getBuildTypeInternalId() {
    return buildTypeInternalId;
  }

  public void setBuildTypeInternalId(String buildTypeInternalId) {
    this.buildTypeInternalId = buildTypeInternalId;
  }

  public Build number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @ApiModelProperty(value = "")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public Build status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Build state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public Build running(Boolean running) {
    this.running = running;
    return this;
  }

   /**
   * Get running
   * @return running
  **/
  @ApiModelProperty(value = "")
  public Boolean isRunning() {
    return running;
  }

  public void setRunning(Boolean running) {
    this.running = running;
  }

  public Build composite(Boolean composite) {
    this.composite = composite;
    return this;
  }

   /**
   * Get composite
   * @return composite
  **/
  @ApiModelProperty(value = "")
  public Boolean isComposite() {
    return composite;
  }

  public void setComposite(Boolean composite) {
    this.composite = composite;
  }

  public Build failedToStart(Boolean failedToStart) {
    this.failedToStart = failedToStart;
    return this;
  }

   /**
   * Get failedToStart
   * @return failedToStart
  **/
  @ApiModelProperty(value = "")
  public Boolean isFailedToStart() {
    return failedToStart;
  }

  public void setFailedToStart(Boolean failedToStart) {
    this.failedToStart = failedToStart;
  }

  public Build personal(Boolean personal) {
    this.personal = personal;
    return this;
  }

   /**
   * Get personal
   * @return personal
  **/
  @ApiModelProperty(value = "")
  public Boolean isPersonal() {
    return personal;
  }

  public void setPersonal(Boolean personal) {
    this.personal = personal;
  }

  public Build percentageComplete(Integer percentageComplete) {
    this.percentageComplete = percentageComplete;
    return this;
  }

   /**
   * Get percentageComplete
   * @return percentageComplete
  **/
  @ApiModelProperty(value = "")
  public Integer getPercentageComplete() {
    return percentageComplete;
  }

  public void setPercentageComplete(Integer percentageComplete) {
    this.percentageComplete = percentageComplete;
  }

  public Build branchName(String branchName) {
    this.branchName = branchName;
    return this;
  }

   /**
   * Get branchName
   * @return branchName
  **/
  @ApiModelProperty(value = "")
  public String getBranchName() {
    return branchName;
  }

  public void setBranchName(String branchName) {
    this.branchName = branchName;
  }

  public Build defaultBranch(Boolean defaultBranch) {
    this.defaultBranch = defaultBranch;
    return this;
  }

   /**
   * Get defaultBranch
   * @return defaultBranch
  **/
  @ApiModelProperty(value = "")
  public Boolean isDefaultBranch() {
    return defaultBranch;
  }

  public void setDefaultBranch(Boolean defaultBranch) {
    this.defaultBranch = defaultBranch;
  }

  public Build unspecifiedBranch(Boolean unspecifiedBranch) {
    this.unspecifiedBranch = unspecifiedBranch;
    return this;
  }

   /**
   * Get unspecifiedBranch
   * @return unspecifiedBranch
  **/
  @ApiModelProperty(value = "")
  public Boolean isUnspecifiedBranch() {
    return unspecifiedBranch;
  }

  public void setUnspecifiedBranch(Boolean unspecifiedBranch) {
    this.unspecifiedBranch = unspecifiedBranch;
  }

  public Build history(Boolean history) {
    this.history = history;
    return this;
  }

   /**
   * Get history
   * @return history
  **/
  @ApiModelProperty(value = "")
  public Boolean isHistory() {
    return history;
  }

  public void setHistory(Boolean history) {
    this.history = history;
  }

  public Build pinned(Boolean pinned) {
    this.pinned = pinned;
    return this;
  }

   /**
   * Get pinned
   * @return pinned
  **/
  @ApiModelProperty(value = "")
  public Boolean isPinned() {
    return pinned;
  }

  public void setPinned(Boolean pinned) {
    this.pinned = pinned;
  }

  public Build href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @ApiModelProperty(value = "")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public Build webUrl(String webUrl) {
    this.webUrl = webUrl;
    return this;
  }

   /**
   * Get webUrl
   * @return webUrl
  **/
  @ApiModelProperty(value = "")
  public String getWebUrl() {
    return webUrl;
  }

  public void setWebUrl(String webUrl) {
    this.webUrl = webUrl;
  }

  public Build queuePosition(Integer queuePosition) {
    this.queuePosition = queuePosition;
    return this;
  }

   /**
   * Get queuePosition
   * @return queuePosition
  **/
  @ApiModelProperty(value = "")
  public Integer getQueuePosition() {
    return queuePosition;
  }

  public void setQueuePosition(Integer queuePosition) {
    this.queuePosition = queuePosition;
  }

  public Build limitedChangesCount(Integer limitedChangesCount) {
    this.limitedChangesCount = limitedChangesCount;
    return this;
  }

   /**
   * Get limitedChangesCount
   * @return limitedChangesCount
  **/
  @ApiModelProperty(value = "")
  public Integer getLimitedChangesCount() {
    return limitedChangesCount;
  }

  public void setLimitedChangesCount(Integer limitedChangesCount) {
    this.limitedChangesCount = limitedChangesCount;
  }

  public Build artifactsDirectory(String artifactsDirectory) {
    this.artifactsDirectory = artifactsDirectory;
    return this;
  }

   /**
   * Get artifactsDirectory
   * @return artifactsDirectory
  **/
  @ApiModelProperty(value = "")
  public String getArtifactsDirectory() {
    return artifactsDirectory;
  }

  public void setArtifactsDirectory(String artifactsDirectory) {
    this.artifactsDirectory = artifactsDirectory;
  }

  public Build links(Links links) {
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public Links getLinks() {
    return links;
  }

  public void setLinks(Links links) {
    this.links = links;
  }

  public Build statusText(String statusText) {
    this.statusText = statusText;
    return this;
  }

   /**
   * Get statusText
   * @return statusText
  **/
  @ApiModelProperty(value = "")
  public String getStatusText() {
    return statusText;
  }

  public void setStatusText(String statusText) {
    this.statusText = statusText;
  }

  public Build buildType(BuildType buildType) {
    this.buildType = buildType;
    return this;
  }

   /**
   * Get buildType
   * @return buildType
  **/
  @ApiModelProperty(value = "")
  public BuildType getBuildType() {
    return buildType;
  }

  public void setBuildType(BuildType buildType) {
    this.buildType = buildType;
  }

  public Build comment(Comment comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @ApiModelProperty(value = "")
  public Comment getComment() {
    return comment;
  }

  public void setComment(Comment comment) {
    this.comment = comment;
  }

  public Build tags(Tags tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public Tags getTags() {
    return tags;
  }

  public void setTags(Tags tags) {
    this.tags = tags;
  }

  public Build pinInfo(Comment pinInfo) {
    this.pinInfo = pinInfo;
    return this;
  }

   /**
   * Get pinInfo
   * @return pinInfo
  **/
  @ApiModelProperty(value = "")
  public Comment getPinInfo() {
    return pinInfo;
  }

  public void setPinInfo(Comment pinInfo) {
    this.pinInfo = pinInfo;
  }

  public Build user(User user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(value = "")
  public User getUser() {
    return user;
  }

  public void setUser(User user) {
    this.user = user;
  }

  public Build startEstimate(String startEstimate) {
    this.startEstimate = startEstimate;
    return this;
  }

   /**
   * Get startEstimate
   * @return startEstimate
  **/
  @ApiModelProperty(value = "")
  public String getStartEstimate() {
    return startEstimate;
  }

  public void setStartEstimate(String startEstimate) {
    this.startEstimate = startEstimate;
  }

  public Build waitReason(String waitReason) {
    this.waitReason = waitReason;
    return this;
  }

   /**
   * Get waitReason
   * @return waitReason
  **/
  @ApiModelProperty(value = "")
  public String getWaitReason() {
    return waitReason;
  }

  public void setWaitReason(String waitReason) {
    this.waitReason = waitReason;
  }

  public Build finishEstimate(String finishEstimate) {
    this.finishEstimate = finishEstimate;
    return this;
  }

   /**
   * Get finishEstimate
   * @return finishEstimate
  **/
  @ApiModelProperty(value = "")
  public String getFinishEstimate() {
    return finishEstimate;
  }

  public void setFinishEstimate(String finishEstimate) {
    this.finishEstimate = finishEstimate;
  }

  public Build delayedByBuild(Build delayedByBuild) {
    this.delayedByBuild = delayedByBuild;
    return this;
  }

   /**
   * Get delayedByBuild
   * @return delayedByBuild
  **/
  @ApiModelProperty(value = "")
  public Build getDelayedByBuild() {
    return delayedByBuild;
  }

  public void setDelayedByBuild(Build delayedByBuild) {
    this.delayedByBuild = delayedByBuild;
  }

  public Build plannedAgent(Agent plannedAgent) {
    this.plannedAgent = plannedAgent;
    return this;
  }

   /**
   * Get plannedAgent
   * @return plannedAgent
  **/
  @ApiModelProperty(value = "")
  public Agent getPlannedAgent() {
    return plannedAgent;
  }

  public void setPlannedAgent(Agent plannedAgent) {
    this.plannedAgent = plannedAgent;
  }

  public Build approvalInfo(ApprovalInfo approvalInfo) {
    this.approvalInfo = approvalInfo;
    return this;
  }

   /**
   * Get approvalInfo
   * @return approvalInfo
  **/
  @ApiModelProperty(value = "")
  public ApprovalInfo getApprovalInfo() {
    return approvalInfo;
  }

  public void setApprovalInfo(ApprovalInfo approvalInfo) {
    this.approvalInfo = approvalInfo;
  }

  public Build runningInfo(ProgressInfo runningInfo) {
    this.runningInfo = runningInfo;
    return this;
  }

   /**
   * Get runningInfo
   * @return runningInfo
  **/
  @ApiModelProperty(value = "")
  public ProgressInfo getRunningInfo() {
    return runningInfo;
  }

  public void setRunningInfo(ProgressInfo runningInfo) {
    this.runningInfo = runningInfo;
  }

  public Build canceledInfo(Comment canceledInfo) {
    this.canceledInfo = canceledInfo;
    return this;
  }

   /**
   * Get canceledInfo
   * @return canceledInfo
  **/
  @ApiModelProperty(value = "")
  public Comment getCanceledInfo() {
    return canceledInfo;
  }

  public void setCanceledInfo(Comment canceledInfo) {
    this.canceledInfo = canceledInfo;
  }

  public Build queuedDate(String queuedDate) {
    this.queuedDate = queuedDate;
    return this;
  }

   /**
   * Get queuedDate
   * @return queuedDate
  **/
  @ApiModelProperty(value = "")
  public String getQueuedDate() {
    return queuedDate;
  }

  public void setQueuedDate(String queuedDate) {
    this.queuedDate = queuedDate;
  }

  public Build startDate(String startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(value = "")
  public String getStartDate() {
    return startDate;
  }

  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }

  public Build finishDate(String finishDate) {
    this.finishDate = finishDate;
    return this;
  }

   /**
   * Get finishDate
   * @return finishDate
  **/
  @ApiModelProperty(value = "")
  public String getFinishDate() {
    return finishDate;
  }

  public void setFinishDate(String finishDate) {
    this.finishDate = finishDate;
  }

  public Build triggered(TriggeredBy triggered) {
    this.triggered = triggered;
    return this;
  }

   /**
   * Get triggered
   * @return triggered
  **/
  @ApiModelProperty(value = "")
  public TriggeredBy getTriggered() {
    return triggered;
  }

  public void setTriggered(TriggeredBy triggered) {
    this.triggered = triggered;
  }

  public Build lastChanges(Changes lastChanges) {
    this.lastChanges = lastChanges;
    return this;
  }

   /**
   * Get lastChanges
   * @return lastChanges
  **/
  @ApiModelProperty(value = "")
  public Changes getLastChanges() {
    return lastChanges;
  }

  public void setLastChanges(Changes lastChanges) {
    this.lastChanges = lastChanges;
  }

  public Build changes(Changes changes) {
    this.changes = changes;
    return this;
  }

   /**
   * Get changes
   * @return changes
  **/
  @ApiModelProperty(value = "")
  public Changes getChanges() {
    return changes;
  }

  public void setChanges(Changes changes) {
    this.changes = changes;
  }

  public Build revisions(Revisions revisions) {
    this.revisions = revisions;
    return this;
  }

   /**
   * Get revisions
   * @return revisions
  **/
  @ApiModelProperty(value = "")
  public Revisions getRevisions() {
    return revisions;
  }

  public void setRevisions(Revisions revisions) {
    this.revisions = revisions;
  }

  public Build versionedSettingsRevision(Revision versionedSettingsRevision) {
    this.versionedSettingsRevision = versionedSettingsRevision;
    return this;
  }

   /**
   * Get versionedSettingsRevision
   * @return versionedSettingsRevision
  **/
  @ApiModelProperty(value = "")
  public Revision getVersionedSettingsRevision() {
    return versionedSettingsRevision;
  }

  public void setVersionedSettingsRevision(Revision versionedSettingsRevision) {
    this.versionedSettingsRevision = versionedSettingsRevision;
  }

  public Build artifactDependencyChanges(BuildChanges artifactDependencyChanges) {
    this.artifactDependencyChanges = artifactDependencyChanges;
    return this;
  }

   /**
   * Get artifactDependencyChanges
   * @return artifactDependencyChanges
  **/
  @ApiModelProperty(value = "")
  public BuildChanges getArtifactDependencyChanges() {
    return artifactDependencyChanges;
  }

  public void setArtifactDependencyChanges(BuildChanges artifactDependencyChanges) {
    this.artifactDependencyChanges = artifactDependencyChanges;
  }

  public Build agent(Agent agent) {
    this.agent = agent;
    return this;
  }

   /**
   * Get agent
   * @return agent
  **/
  @ApiModelProperty(value = "")
  public Agent getAgent() {
    return agent;
  }

  public void setAgent(Agent agent) {
    this.agent = agent;
  }

  public Build compatibleAgents(Agents compatibleAgents) {
    this.compatibleAgents = compatibleAgents;
    return this;
  }

   /**
   * Get compatibleAgents
   * @return compatibleAgents
  **/
  @ApiModelProperty(value = "")
  public Agents getCompatibleAgents() {
    return compatibleAgents;
  }

  public void setCompatibleAgents(Agents compatibleAgents) {
    this.compatibleAgents = compatibleAgents;
  }

  public Build testOccurrences(TestOccurrences testOccurrences) {
    this.testOccurrences = testOccurrences;
    return this;
  }

   /**
   * Get testOccurrences
   * @return testOccurrences
  **/
  @ApiModelProperty(value = "")
  public TestOccurrences getTestOccurrences() {
    return testOccurrences;
  }

  public void setTestOccurrences(TestOccurrences testOccurrences) {
    this.testOccurrences = testOccurrences;
  }

  public Build problemOccurrences(ProblemOccurrences problemOccurrences) {
    this.problemOccurrences = problemOccurrences;
    return this;
  }

   /**
   * Get problemOccurrences
   * @return problemOccurrences
  **/
  @ApiModelProperty(value = "")
  public ProblemOccurrences getProblemOccurrences() {
    return problemOccurrences;
  }

  public void setProblemOccurrences(ProblemOccurrences problemOccurrences) {
    this.problemOccurrences = problemOccurrences;
  }

  public Build artifacts(Files artifacts) {
    this.artifacts = artifacts;
    return this;
  }

   /**
   * Get artifacts
   * @return artifacts
  **/
  @ApiModelProperty(value = "")
  public Files getArtifacts() {
    return artifacts;
  }

  public void setArtifacts(Files artifacts) {
    this.artifacts = artifacts;
  }

  public Build relatedIssues(IssuesUsages relatedIssues) {
    this.relatedIssues = relatedIssues;
    return this;
  }

   /**
   * Get relatedIssues
   * @return relatedIssues
  **/
  @ApiModelProperty(value = "")
  public IssuesUsages getRelatedIssues() {
    return relatedIssues;
  }

  public void setRelatedIssues(IssuesUsages relatedIssues) {
    this.relatedIssues = relatedIssues;
  }

  public Build properties(Properties properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public Properties getProperties() {
    return properties;
  }

  public void setProperties(Properties properties) {
    this.properties = properties;
  }

  public Build resultingProperties(Properties resultingProperties) {
    this.resultingProperties = resultingProperties;
    return this;
  }

   /**
   * Get resultingProperties
   * @return resultingProperties
  **/
  @ApiModelProperty(value = "")
  public Properties getResultingProperties() {
    return resultingProperties;
  }

  public void setResultingProperties(Properties resultingProperties) {
    this.resultingProperties = resultingProperties;
  }

  public Build attributes(Entries attributes) {
    this.attributes = attributes;
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "")
  public Entries getAttributes() {
    return attributes;
  }

  public void setAttributes(Entries attributes) {
    this.attributes = attributes;
  }

  public Build statistics(Properties statistics) {
    this.statistics = statistics;
    return this;
  }

   /**
   * Get statistics
   * @return statistics
  **/
  @ApiModelProperty(value = "")
  public Properties getStatistics() {
    return statistics;
  }

  public void setStatistics(Properties statistics) {
    this.statistics = statistics;
  }

  public Build metadata(Datas metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Datas getMetadata() {
    return metadata;
  }

  public void setMetadata(Datas metadata) {
    this.metadata = metadata;
  }

  public Build snapshotDependencies(Builds snapshotDependencies) {
    this.snapshotDependencies = snapshotDependencies;
    return this;
  }

   /**
   * Get snapshotDependencies
   * @return snapshotDependencies
  **/
  @ApiModelProperty(value = "")
  public Builds getSnapshotDependencies() {
    return snapshotDependencies;
  }

  public void setSnapshotDependencies(Builds snapshotDependencies) {
    this.snapshotDependencies = snapshotDependencies;
  }

  public Build artifactDependencies(Builds artifactDependencies) {
    this.artifactDependencies = artifactDependencies;
    return this;
  }

   /**
   * Get artifactDependencies
   * @return artifactDependencies
  **/
  @ApiModelProperty(value = "")
  public Builds getArtifactDependencies() {
    return artifactDependencies;
  }

  public void setArtifactDependencies(Builds artifactDependencies) {
    this.artifactDependencies = artifactDependencies;
  }

  public Build customArtifactDependencies(ArtifactDependencies customArtifactDependencies) {
    this.customArtifactDependencies = customArtifactDependencies;
    return this;
  }

   /**
   * Get customArtifactDependencies
   * @return customArtifactDependencies
  **/
  @ApiModelProperty(value = "")
  public ArtifactDependencies getCustomArtifactDependencies() {
    return customArtifactDependencies;
  }

  public void setCustomArtifactDependencies(ArtifactDependencies customArtifactDependencies) {
    this.customArtifactDependencies = customArtifactDependencies;
  }

  public Build settingsHash(String settingsHash) {
    this.settingsHash = settingsHash;
    return this;
  }

   /**
   * Get settingsHash
   * @return settingsHash
  **/
  @ApiModelProperty(value = "")
  public String getSettingsHash() {
    return settingsHash;
  }

  public void setSettingsHash(String settingsHash) {
    this.settingsHash = settingsHash;
  }

  public Build currentSettingsHash(String currentSettingsHash) {
    this.currentSettingsHash = currentSettingsHash;
    return this;
  }

   /**
   * Get currentSettingsHash
   * @return currentSettingsHash
  **/
  @ApiModelProperty(value = "")
  public String getCurrentSettingsHash() {
    return currentSettingsHash;
  }

  public void setCurrentSettingsHash(String currentSettingsHash) {
    this.currentSettingsHash = currentSettingsHash;
  }

  public Build modificationId(String modificationId) {
    this.modificationId = modificationId;
    return this;
  }

   /**
   * Get modificationId
   * @return modificationId
  **/
  @ApiModelProperty(value = "")
  public String getModificationId() {
    return modificationId;
  }

  public void setModificationId(String modificationId) {
    this.modificationId = modificationId;
  }

  public Build chainModificationId(String chainModificationId) {
    this.chainModificationId = chainModificationId;
    return this;
  }

   /**
   * Get chainModificationId
   * @return chainModificationId
  **/
  @ApiModelProperty(value = "")
  public String getChainModificationId() {
    return chainModificationId;
  }

  public void setChainModificationId(String chainModificationId) {
    this.chainModificationId = chainModificationId;
  }

  public Build replacementIds(Items replacementIds) {
    this.replacementIds = replacementIds;
    return this;
  }

   /**
   * Get replacementIds
   * @return replacementIds
  **/
  @ApiModelProperty(value = "")
  public Items getReplacementIds() {
    return replacementIds;
  }

  public void setReplacementIds(Items replacementIds) {
    this.replacementIds = replacementIds;
  }

  public Build related(Related related) {
    this.related = related;
    return this;
  }

   /**
   * Get related
   * @return related
  **/
  @ApiModelProperty(value = "")
  public Related getRelated() {
    return related;
  }

  public void setRelated(Related related) {
    this.related = related;
  }

  public Build triggeringOptions(BuildTriggeringOptions triggeringOptions) {
    this.triggeringOptions = triggeringOptions;
    return this;
  }

   /**
   * Get triggeringOptions
   * @return triggeringOptions
  **/
  @ApiModelProperty(value = "")
  public BuildTriggeringOptions getTriggeringOptions() {
    return triggeringOptions;
  }

  public void setTriggeringOptions(BuildTriggeringOptions triggeringOptions) {
    this.triggeringOptions = triggeringOptions;
  }

  public Build usedByOtherBuilds(Boolean usedByOtherBuilds) {
    this.usedByOtherBuilds = usedByOtherBuilds;
    return this;
  }

   /**
   * Get usedByOtherBuilds
   * @return usedByOtherBuilds
  **/
  @ApiModelProperty(value = "")
  public Boolean isUsedByOtherBuilds() {
    return usedByOtherBuilds;
  }

  public void setUsedByOtherBuilds(Boolean usedByOtherBuilds) {
    this.usedByOtherBuilds = usedByOtherBuilds;
  }

  public Build statusChangeComment(Comment statusChangeComment) {
    this.statusChangeComment = statusChangeComment;
    return this;
  }

   /**
   * Get statusChangeComment
   * @return statusChangeComment
  **/
  @ApiModelProperty(value = "")
  public Comment getStatusChangeComment() {
    return statusChangeComment;
  }

  public void setStatusChangeComment(Comment statusChangeComment) {
    this.statusChangeComment = statusChangeComment;
  }

  public Build vcsLabels(List<VcsLabel> vcsLabels) {
    this.vcsLabels = vcsLabels;
    return this;
  }

  public Build addVcsLabelsItem(VcsLabel vcsLabelsItem) {
    if (this.vcsLabels == null) {
      this.vcsLabels = new ArrayList<VcsLabel>();
    }
    this.vcsLabels.add(vcsLabelsItem);
    return this;
  }

   /**
   * Get vcsLabels
   * @return vcsLabels
  **/
  @ApiModelProperty(value = "")
  public List<VcsLabel> getVcsLabels() {
    return vcsLabels;
  }

  public void setVcsLabels(List<VcsLabel> vcsLabels) {
    this.vcsLabels = vcsLabels;
  }

  public Build detachedFromAgent(Boolean detachedFromAgent) {
    this.detachedFromAgent = detachedFromAgent;
    return this;
  }

   /**
   * Get detachedFromAgent
   * @return detachedFromAgent
  **/
  @ApiModelProperty(value = "")
  public Boolean isDetachedFromAgent() {
    return detachedFromAgent;
  }

  public void setDetachedFromAgent(Boolean detachedFromAgent) {
    this.detachedFromAgent = detachedFromAgent;
  }

  public Build finishOnAgentDate(String finishOnAgentDate) {
    this.finishOnAgentDate = finishOnAgentDate;
    return this;
  }

   /**
   * Get finishOnAgentDate
   * @return finishOnAgentDate
  **/
  @ApiModelProperty(value = "")
  public String getFinishOnAgentDate() {
    return finishOnAgentDate;
  }

  public void setFinishOnAgentDate(String finishOnAgentDate) {
    this.finishOnAgentDate = finishOnAgentDate;
  }

  public Build customized(Boolean customized) {
    this.customized = customized;
    return this;
  }

   /**
   * Get customized
   * @return customized
  **/
  @ApiModelProperty(value = "")
  public Boolean isCustomized() {
    return customized;
  }

  public void setCustomized(Boolean customized) {
    this.customized = customized;
  }

  public Build customization(Customizations customization) {
    this.customization = customization;
    return this;
  }

   /**
   * Get customization
   * @return customization
  **/
  @ApiModelProperty(value = "")
  public Customizations getCustomization() {
    return customization;
  }

  public void setCustomization(Customizations customization) {
    this.customization = customization;
  }

  public Build changesCollectingInProgress(Boolean changesCollectingInProgress) {
    this.changesCollectingInProgress = changesCollectingInProgress;
    return this;
  }

   /**
   * Get changesCollectingInProgress
   * @return changesCollectingInProgress
  **/
  @ApiModelProperty(value = "")
  public Boolean isChangesCollectingInProgress() {
    return changesCollectingInProgress;
  }

  public void setChangesCollectingInProgress(Boolean changesCollectingInProgress) {
    this.changesCollectingInProgress = changesCollectingInProgress;
  }

  public Build queuedWaitReasons(Properties queuedWaitReasons) {
    this.queuedWaitReasons = queuedWaitReasons;
    return this;
  }

   /**
   * Get queuedWaitReasons
   * @return queuedWaitReasons
  **/
  @ApiModelProperty(value = "")
  public Properties getQueuedWaitReasons() {
    return queuedWaitReasons;
  }

  public void setQueuedWaitReasons(Properties queuedWaitReasons) {
    this.queuedWaitReasons = queuedWaitReasons;
  }

  public Build downloadedArtifacts(DownloadedArtifacts downloadedArtifacts) {
    this.downloadedArtifacts = downloadedArtifacts;
    return this;
  }

   /**
   * Get downloadedArtifacts
   * @return downloadedArtifacts
  **/
  @ApiModelProperty(value = "")
  public DownloadedArtifacts getDownloadedArtifacts() {
    return downloadedArtifacts;
  }

  public void setDownloadedArtifacts(DownloadedArtifacts downloadedArtifacts) {
    this.downloadedArtifacts = downloadedArtifacts;
  }

  public Build firstBuildWithSameChanges(Build firstBuildWithSameChanges) {
    this.firstBuildWithSameChanges = firstBuildWithSameChanges;
    return this;
  }

   /**
   * Get firstBuildWithSameChanges
   * @return firstBuildWithSameChanges
  **/
  @ApiModelProperty(value = "")
  public Build getFirstBuildWithSameChanges() {
    return firstBuildWithSameChanges;
  }

  public void setFirstBuildWithSameChanges(Build firstBuildWithSameChanges) {
    this.firstBuildWithSameChanges = firstBuildWithSameChanges;
  }

  public Build locator(String locator) {
    this.locator = locator;
    return this;
  }

   /**
   * Get locator
   * @return locator
  **/
  @ApiModelProperty(value = "")
  public String getLocator() {
    return locator;
  }

  public void setLocator(String locator) {
    this.locator = locator;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Build build = (Build) o;
    return Objects.equals(this.id, build.id) &&
        Objects.equals(this.taskId, build.taskId) &&
        Objects.equals(this.buildTypeId, build.buildTypeId) &&
        Objects.equals(this.buildTypeInternalId, build.buildTypeInternalId) &&
        Objects.equals(this.number, build.number) &&
        Objects.equals(this.status, build.status) &&
        Objects.equals(this.state, build.state) &&
        Objects.equals(this.running, build.running) &&
        Objects.equals(this.composite, build.composite) &&
        Objects.equals(this.failedToStart, build.failedToStart) &&
        Objects.equals(this.personal, build.personal) &&
        Objects.equals(this.percentageComplete, build.percentageComplete) &&
        Objects.equals(this.branchName, build.branchName) &&
        Objects.equals(this.defaultBranch, build.defaultBranch) &&
        Objects.equals(this.unspecifiedBranch, build.unspecifiedBranch) &&
        Objects.equals(this.history, build.history) &&
        Objects.equals(this.pinned, build.pinned) &&
        Objects.equals(this.href, build.href) &&
        Objects.equals(this.webUrl, build.webUrl) &&
        Objects.equals(this.queuePosition, build.queuePosition) &&
        Objects.equals(this.limitedChangesCount, build.limitedChangesCount) &&
        Objects.equals(this.artifactsDirectory, build.artifactsDirectory) &&
        Objects.equals(this.links, build.links) &&
        Objects.equals(this.statusText, build.statusText) &&
        Objects.equals(this.buildType, build.buildType) &&
        Objects.equals(this.comment, build.comment) &&
        Objects.equals(this.tags, build.tags) &&
        Objects.equals(this.pinInfo, build.pinInfo) &&
        Objects.equals(this.user, build.user) &&
        Objects.equals(this.startEstimate, build.startEstimate) &&
        Objects.equals(this.waitReason, build.waitReason) &&
        Objects.equals(this.finishEstimate, build.finishEstimate) &&
        Objects.equals(this.delayedByBuild, build.delayedByBuild) &&
        Objects.equals(this.plannedAgent, build.plannedAgent) &&
        Objects.equals(this.approvalInfo, build.approvalInfo) &&
        Objects.equals(this.runningInfo, build.runningInfo) &&
        Objects.equals(this.canceledInfo, build.canceledInfo) &&
        Objects.equals(this.queuedDate, build.queuedDate) &&
        Objects.equals(this.startDate, build.startDate) &&
        Objects.equals(this.finishDate, build.finishDate) &&
        Objects.equals(this.triggered, build.triggered) &&
        Objects.equals(this.lastChanges, build.lastChanges) &&
        Objects.equals(this.changes, build.changes) &&
        Objects.equals(this.revisions, build.revisions) &&
        Objects.equals(this.versionedSettingsRevision, build.versionedSettingsRevision) &&
        Objects.equals(this.artifactDependencyChanges, build.artifactDependencyChanges) &&
        Objects.equals(this.agent, build.agent) &&
        Objects.equals(this.compatibleAgents, build.compatibleAgents) &&
        Objects.equals(this.testOccurrences, build.testOccurrences) &&
        Objects.equals(this.problemOccurrences, build.problemOccurrences) &&
        Objects.equals(this.artifacts, build.artifacts) &&
        Objects.equals(this.relatedIssues, build.relatedIssues) &&
        Objects.equals(this.properties, build.properties) &&
        Objects.equals(this.resultingProperties, build.resultingProperties) &&
        Objects.equals(this.attributes, build.attributes) &&
        Objects.equals(this.statistics, build.statistics) &&
        Objects.equals(this.metadata, build.metadata) &&
        Objects.equals(this.snapshotDependencies, build.snapshotDependencies) &&
        Objects.equals(this.artifactDependencies, build.artifactDependencies) &&
        Objects.equals(this.customArtifactDependencies, build.customArtifactDependencies) &&
        Objects.equals(this.settingsHash, build.settingsHash) &&
        Objects.equals(this.currentSettingsHash, build.currentSettingsHash) &&
        Objects.equals(this.modificationId, build.modificationId) &&
        Objects.equals(this.chainModificationId, build.chainModificationId) &&
        Objects.equals(this.replacementIds, build.replacementIds) &&
        Objects.equals(this.related, build.related) &&
        Objects.equals(this.triggeringOptions, build.triggeringOptions) &&
        Objects.equals(this.usedByOtherBuilds, build.usedByOtherBuilds) &&
        Objects.equals(this.statusChangeComment, build.statusChangeComment) &&
        Objects.equals(this.vcsLabels, build.vcsLabels) &&
        Objects.equals(this.detachedFromAgent, build.detachedFromAgent) &&
        Objects.equals(this.finishOnAgentDate, build.finishOnAgentDate) &&
        Objects.equals(this.customized, build.customized) &&
        Objects.equals(this.customization, build.customization) &&
        Objects.equals(this.changesCollectingInProgress, build.changesCollectingInProgress) &&
        Objects.equals(this.queuedWaitReasons, build.queuedWaitReasons) &&
        Objects.equals(this.downloadedArtifacts, build.downloadedArtifacts) &&
        Objects.equals(this.firstBuildWithSameChanges, build.firstBuildWithSameChanges) &&
        Objects.equals(this.locator, build.locator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, taskId, buildTypeId, buildTypeInternalId, number, status, state, running, composite, failedToStart, personal, percentageComplete, branchName, defaultBranch, unspecifiedBranch, history, pinned, href, webUrl, queuePosition, limitedChangesCount, artifactsDirectory, links, statusText, buildType, comment, tags, pinInfo, user, startEstimate, waitReason, finishEstimate, delayedByBuild, plannedAgent, approvalInfo, runningInfo, canceledInfo, queuedDate, startDate, finishDate, triggered, lastChanges, changes, revisions, versionedSettingsRevision, artifactDependencyChanges, agent, compatibleAgents, testOccurrences, problemOccurrences, artifacts, relatedIssues, properties, resultingProperties, attributes, statistics, metadata, snapshotDependencies, artifactDependencies, customArtifactDependencies, settingsHash, currentSettingsHash, modificationId, chainModificationId, replacementIds, related, triggeringOptions, usedByOtherBuilds, statusChangeComment, vcsLabels, detachedFromAgent, finishOnAgentDate, customized, customization, changesCollectingInProgress, queuedWaitReasons, downloadedArtifacts, firstBuildWithSameChanges, locator);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Build {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    buildTypeId: ").append(toIndentedString(buildTypeId)).append("\n");
    sb.append("    buildTypeInternalId: ").append(toIndentedString(buildTypeInternalId)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    running: ").append(toIndentedString(running)).append("\n");
    sb.append("    composite: ").append(toIndentedString(composite)).append("\n");
    sb.append("    failedToStart: ").append(toIndentedString(failedToStart)).append("\n");
    sb.append("    personal: ").append(toIndentedString(personal)).append("\n");
    sb.append("    percentageComplete: ").append(toIndentedString(percentageComplete)).append("\n");
    sb.append("    branchName: ").append(toIndentedString(branchName)).append("\n");
    sb.append("    defaultBranch: ").append(toIndentedString(defaultBranch)).append("\n");
    sb.append("    unspecifiedBranch: ").append(toIndentedString(unspecifiedBranch)).append("\n");
    sb.append("    history: ").append(toIndentedString(history)).append("\n");
    sb.append("    pinned: ").append(toIndentedString(pinned)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    webUrl: ").append(toIndentedString(webUrl)).append("\n");
    sb.append("    queuePosition: ").append(toIndentedString(queuePosition)).append("\n");
    sb.append("    limitedChangesCount: ").append(toIndentedString(limitedChangesCount)).append("\n");
    sb.append("    artifactsDirectory: ").append(toIndentedString(artifactsDirectory)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    statusText: ").append(toIndentedString(statusText)).append("\n");
    sb.append("    buildType: ").append(toIndentedString(buildType)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    pinInfo: ").append(toIndentedString(pinInfo)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    startEstimate: ").append(toIndentedString(startEstimate)).append("\n");
    sb.append("    waitReason: ").append(toIndentedString(waitReason)).append("\n");
    sb.append("    finishEstimate: ").append(toIndentedString(finishEstimate)).append("\n");
    sb.append("    delayedByBuild: ").append(toIndentedString(delayedByBuild)).append("\n");
    sb.append("    plannedAgent: ").append(toIndentedString(plannedAgent)).append("\n");
    sb.append("    approvalInfo: ").append(toIndentedString(approvalInfo)).append("\n");
    sb.append("    runningInfo: ").append(toIndentedString(runningInfo)).append("\n");
    sb.append("    canceledInfo: ").append(toIndentedString(canceledInfo)).append("\n");
    sb.append("    queuedDate: ").append(toIndentedString(queuedDate)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    finishDate: ").append(toIndentedString(finishDate)).append("\n");
    sb.append("    triggered: ").append(toIndentedString(triggered)).append("\n");
    sb.append("    lastChanges: ").append(toIndentedString(lastChanges)).append("\n");
    sb.append("    changes: ").append(toIndentedString(changes)).append("\n");
    sb.append("    revisions: ").append(toIndentedString(revisions)).append("\n");
    sb.append("    versionedSettingsRevision: ").append(toIndentedString(versionedSettingsRevision)).append("\n");
    sb.append("    artifactDependencyChanges: ").append(toIndentedString(artifactDependencyChanges)).append("\n");
    sb.append("    agent: ").append(toIndentedString(agent)).append("\n");
    sb.append("    compatibleAgents: ").append(toIndentedString(compatibleAgents)).append("\n");
    sb.append("    testOccurrences: ").append(toIndentedString(testOccurrences)).append("\n");
    sb.append("    problemOccurrences: ").append(toIndentedString(problemOccurrences)).append("\n");
    sb.append("    artifacts: ").append(toIndentedString(artifacts)).append("\n");
    sb.append("    relatedIssues: ").append(toIndentedString(relatedIssues)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    resultingProperties: ").append(toIndentedString(resultingProperties)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    statistics: ").append(toIndentedString(statistics)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    snapshotDependencies: ").append(toIndentedString(snapshotDependencies)).append("\n");
    sb.append("    artifactDependencies: ").append(toIndentedString(artifactDependencies)).append("\n");
    sb.append("    customArtifactDependencies: ").append(toIndentedString(customArtifactDependencies)).append("\n");
    sb.append("    settingsHash: ").append(toIndentedString(settingsHash)).append("\n");
    sb.append("    currentSettingsHash: ").append(toIndentedString(currentSettingsHash)).append("\n");
    sb.append("    modificationId: ").append(toIndentedString(modificationId)).append("\n");
    sb.append("    chainModificationId: ").append(toIndentedString(chainModificationId)).append("\n");
    sb.append("    replacementIds: ").append(toIndentedString(replacementIds)).append("\n");
    sb.append("    related: ").append(toIndentedString(related)).append("\n");
    sb.append("    triggeringOptions: ").append(toIndentedString(triggeringOptions)).append("\n");
    sb.append("    usedByOtherBuilds: ").append(toIndentedString(usedByOtherBuilds)).append("\n");
    sb.append("    statusChangeComment: ").append(toIndentedString(statusChangeComment)).append("\n");
    sb.append("    vcsLabels: ").append(toIndentedString(vcsLabels)).append("\n");
    sb.append("    detachedFromAgent: ").append(toIndentedString(detachedFromAgent)).append("\n");
    sb.append("    finishOnAgentDate: ").append(toIndentedString(finishOnAgentDate)).append("\n");
    sb.append("    customized: ").append(toIndentedString(customized)).append("\n");
    sb.append("    customization: ").append(toIndentedString(customization)).append("\n");
    sb.append("    changesCollectingInProgress: ").append(toIndentedString(changesCollectingInProgress)).append("\n");
    sb.append("    queuedWaitReasons: ").append(toIndentedString(queuedWaitReasons)).append("\n");
    sb.append("    downloadedArtifacts: ").append(toIndentedString(downloadedArtifacts)).append("\n");
    sb.append("    firstBuildWithSameChanges: ").append(toIndentedString(firstBuildWithSameChanges)).append("\n");
    sb.append("    locator: ").append(toIndentedString(locator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

