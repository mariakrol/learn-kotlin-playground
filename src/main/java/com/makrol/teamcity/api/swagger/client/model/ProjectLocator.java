/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.makrol.teamcity.api.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents a locator string for filtering Project entities.
 */
@ApiModel(description = "Represents a locator string for filtering Project entities.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-14T01:07:21.722+03:00")
public class ProjectLocator {
  @SerializedName("affectedProject")
  private String affectedProject = null;

  @SerializedName("archived")
  private Boolean archived = null;

  @SerializedName("build")
  private String build = null;

  @SerializedName("buildType")
  private String buildType = null;

  @SerializedName("count")
  private Integer count = null;

  @SerializedName("defaultTemplate")
  private String defaultTemplate = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("internalId")
  private String internalId = null;

  @SerializedName("item")
  private String item = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("pool")
  private String pool = null;

  @SerializedName("project")
  private String project = null;

  @SerializedName("projectFeature")
  private String projectFeature = null;

  @SerializedName("start")
  private Integer start = null;

  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("vcsRoot")
  private String vcsRoot = null;

  @SerializedName("virtual")
  private Boolean virtual = null;

  public ProjectLocator affectedProject(String affectedProject) {
    this.affectedProject = affectedProject;
    return this;
  }

   /**
   * Project (direct or indirect parent) locator.
   * @return affectedProject
  **/
  @ApiModelProperty(value = "Project (direct or indirect parent) locator.")
  public String getAffectedProject() {
    return affectedProject;
  }

  public void setAffectedProject(String affectedProject) {
    this.affectedProject = affectedProject;
  }

  public ProjectLocator archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

   /**
   * Is archived.
   * @return archived
  **/
  @ApiModelProperty(value = "Is archived.")
  public Boolean isArchived() {
    return archived;
  }

  public void setArchived(Boolean archived) {
    this.archived = archived;
  }

  public ProjectLocator build(String build) {
    this.build = build;
    return this;
  }

   /**
   * Build locator.
   * @return build
  **/
  @ApiModelProperty(value = "Build locator.")
  public String getBuild() {
    return build;
  }

  public void setBuild(String build) {
    this.build = build;
  }

  public ProjectLocator buildType(String buildType) {
    this.buildType = buildType;
    return this;
  }

   /**
   * Build type locator.
   * @return buildType
  **/
  @ApiModelProperty(value = "Build type locator.")
  public String getBuildType() {
    return buildType;
  }

  public void setBuildType(String buildType) {
    this.buildType = buildType;
  }

  public ProjectLocator count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * For paginated calls, how many entities to return per page.
   * @return count
  **/
  @ApiModelProperty(value = "For paginated calls, how many entities to return per page.")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public ProjectLocator defaultTemplate(String defaultTemplate) {
    this.defaultTemplate = defaultTemplate;
    return this;
  }

   /**
   * Default template locator.
   * @return defaultTemplate
  **/
  @ApiModelProperty(value = "Default template locator.")
  public String getDefaultTemplate() {
    return defaultTemplate;
  }

  public void setDefaultTemplate(String defaultTemplate) {
    this.defaultTemplate = defaultTemplate;
  }

  public ProjectLocator id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ProjectLocator internalId(String internalId) {
    this.internalId = internalId;
    return this;
  }

   /**
   * Get internalId
   * @return internalId
  **/
  @ApiModelProperty(value = "")
  public String getInternalId() {
    return internalId;
  }

  public void setInternalId(String internalId) {
    this.internalId = internalId;
  }

  public ProjectLocator item(String item) {
    this.item = item;
    return this;
  }

   /**
   * Supply multiple locators and return a union of the results.
   * @return item
  **/
  @ApiModelProperty(value = "Supply multiple locators and return a union of the results.")
  public String getItem() {
    return item;
  }

  public void setItem(String item) {
    this.item = item;
  }

  public ProjectLocator name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ProjectLocator pool(String pool) {
    this.pool = pool;
    return this;
  }

   /**
   * Associated agent pool locator.
   * @return pool
  **/
  @ApiModelProperty(value = "Associated agent pool locator.")
  public String getPool() {
    return pool;
  }

  public void setPool(String pool) {
    this.pool = pool;
  }

  public ProjectLocator project(String project) {
    this.project = project;
    return this;
  }

   /**
   * Project (direct parent) locator.
   * @return project
  **/
  @ApiModelProperty(value = "Project (direct parent) locator.")
  public String getProject() {
    return project;
  }

  public void setProject(String project) {
    this.project = project;
  }

  public ProjectLocator projectFeature(String projectFeature) {
    this.projectFeature = projectFeature;
    return this;
  }

   /**
   * Project feature locator.
   * @return projectFeature
  **/
  @ApiModelProperty(value = "Project feature locator.")
  public String getProjectFeature() {
    return projectFeature;
  }

  public void setProjectFeature(String projectFeature) {
    this.projectFeature = projectFeature;
  }

  public ProjectLocator start(Integer start) {
    this.start = start;
    return this;
  }

   /**
   * For paginated calls, from which entity to start rendering the page.
   * @return start
  **/
  @ApiModelProperty(value = "For paginated calls, from which entity to start rendering the page.")
  public Integer getStart() {
    return start;
  }

  public void setStart(Integer start) {
    this.start = start;
  }

  public ProjectLocator uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @ApiModelProperty(value = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public ProjectLocator vcsRoot(String vcsRoot) {
    this.vcsRoot = vcsRoot;
    return this;
  }

   /**
   * VCS root locator.
   * @return vcsRoot
  **/
  @ApiModelProperty(value = "VCS root locator.")
  public String getVcsRoot() {
    return vcsRoot;
  }

  public void setVcsRoot(String vcsRoot) {
    this.vcsRoot = vcsRoot;
  }

  public ProjectLocator virtual(Boolean virtual) {
    this.virtual = virtual;
    return this;
  }

   /**
   * Is virtual (default&#x3D;false).
   * @return virtual
  **/
  @ApiModelProperty(value = "Is virtual (default=false).")
  public Boolean isVirtual() {
    return virtual;
  }

  public void setVirtual(Boolean virtual) {
    this.virtual = virtual;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectLocator projectLocator = (ProjectLocator) o;
    return Objects.equals(this.affectedProject, projectLocator.affectedProject) &&
        Objects.equals(this.archived, projectLocator.archived) &&
        Objects.equals(this.build, projectLocator.build) &&
        Objects.equals(this.buildType, projectLocator.buildType) &&
        Objects.equals(this.count, projectLocator.count) &&
        Objects.equals(this.defaultTemplate, projectLocator.defaultTemplate) &&
        Objects.equals(this.id, projectLocator.id) &&
        Objects.equals(this.internalId, projectLocator.internalId) &&
        Objects.equals(this.item, projectLocator.item) &&
        Objects.equals(this.name, projectLocator.name) &&
        Objects.equals(this.pool, projectLocator.pool) &&
        Objects.equals(this.project, projectLocator.project) &&
        Objects.equals(this.projectFeature, projectLocator.projectFeature) &&
        Objects.equals(this.start, projectLocator.start) &&
        Objects.equals(this.uuid, projectLocator.uuid) &&
        Objects.equals(this.vcsRoot, projectLocator.vcsRoot) &&
        Objects.equals(this.virtual, projectLocator.virtual);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affectedProject, archived, build, buildType, count, defaultTemplate, id, internalId, item, name, pool, project, projectFeature, start, uuid, vcsRoot, virtual);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectLocator {\n");
    
    sb.append("    affectedProject: ").append(toIndentedString(affectedProject)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    buildType: ").append(toIndentedString(buildType)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    defaultTemplate: ").append(toIndentedString(defaultTemplate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    internalId: ").append(toIndentedString(internalId)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pool: ").append(toIndentedString(pool)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    projectFeature: ").append(toIndentedString(projectFeature)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    vcsRoot: ").append(toIndentedString(vcsRoot)).append("\n");
    sb.append("    virtual: ").append(toIndentedString(virtual)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

