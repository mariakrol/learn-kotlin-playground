/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.makrol.teamcity.api.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.makrol.teamcity.api.swagger.client.model.Build;
import com.makrol.teamcity.api.swagger.client.model.BuildType;
import com.makrol.teamcity.api.swagger.client.model.Properties;
import com.makrol.teamcity.api.swagger.client.model.User;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents the user/trigger/dependency which caused this build to start.
 */
@ApiModel(description = "Represents the user/trigger/dependency which caused this build to start.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-14T01:07:21.722+03:00")
public class TriggeredBy {
  @SerializedName("type")
  private String type = null;

  @SerializedName("details")
  private String details = null;

  @SerializedName("date")
  private String date = null;

  @SerializedName("displayText")
  private String displayText = null;

  @SerializedName("rawValue")
  private String rawValue = null;

  @SerializedName("user")
  private User user = null;

  @SerializedName("build")
  private Build build = null;

  @SerializedName("buildType")
  private BuildType buildType = null;

  @SerializedName("properties")
  private Properties properties = null;

  public TriggeredBy type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public TriggeredBy details(String details) {
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @ApiModelProperty(value = "")
  public String getDetails() {
    return details;
  }

  public void setDetails(String details) {
    this.details = details;
  }

  public TriggeredBy date(String date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(value = "")
  public String getDate() {
    return date;
  }

  public void setDate(String date) {
    this.date = date;
  }

  public TriggeredBy displayText(String displayText) {
    this.displayText = displayText;
    return this;
  }

   /**
   * Get displayText
   * @return displayText
  **/
  @ApiModelProperty(value = "")
  public String getDisplayText() {
    return displayText;
  }

  public void setDisplayText(String displayText) {
    this.displayText = displayText;
  }

  public TriggeredBy rawValue(String rawValue) {
    this.rawValue = rawValue;
    return this;
  }

   /**
   * Get rawValue
   * @return rawValue
  **/
  @ApiModelProperty(value = "")
  public String getRawValue() {
    return rawValue;
  }

  public void setRawValue(String rawValue) {
    this.rawValue = rawValue;
  }

  public TriggeredBy user(User user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(value = "")
  public User getUser() {
    return user;
  }

  public void setUser(User user) {
    this.user = user;
  }

  public TriggeredBy build(Build build) {
    this.build = build;
    return this;
  }

   /**
   * Get build
   * @return build
  **/
  @ApiModelProperty(value = "")
  public Build getBuild() {
    return build;
  }

  public void setBuild(Build build) {
    this.build = build;
  }

  public TriggeredBy buildType(BuildType buildType) {
    this.buildType = buildType;
    return this;
  }

   /**
   * Get buildType
   * @return buildType
  **/
  @ApiModelProperty(value = "")
  public BuildType getBuildType() {
    return buildType;
  }

  public void setBuildType(BuildType buildType) {
    this.buildType = buildType;
  }

  public TriggeredBy properties(Properties properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public Properties getProperties() {
    return properties;
  }

  public void setProperties(Properties properties) {
    this.properties = properties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TriggeredBy triggeredBy = (TriggeredBy) o;
    return Objects.equals(this.type, triggeredBy.type) &&
        Objects.equals(this.details, triggeredBy.details) &&
        Objects.equals(this.date, triggeredBy.date) &&
        Objects.equals(this.displayText, triggeredBy.displayText) &&
        Objects.equals(this.rawValue, triggeredBy.rawValue) &&
        Objects.equals(this.user, triggeredBy.user) &&
        Objects.equals(this.build, triggeredBy.build) &&
        Objects.equals(this.buildType, triggeredBy.buildType) &&
        Objects.equals(this.properties, triggeredBy.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, details, date, displayText, rawValue, user, build, buildType, properties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TriggeredBy {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    displayText: ").append(toIndentedString(displayText)).append("\n");
    sb.append("    rawValue: ").append(toIndentedString(rawValue)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    buildType: ").append(toIndentedString(buildType)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

