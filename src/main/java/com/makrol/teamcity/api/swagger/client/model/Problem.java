/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.makrol.teamcity.api.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.makrol.teamcity.api.swagger.client.model.Investigations;
import com.makrol.teamcity.api.swagger.client.model.Mutes;
import com.makrol.teamcity.api.swagger.client.model.ProblemOccurrences;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents an issue with the test.
 */
@ApiModel(description = "Represents an issue with the test.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-14T01:07:21.722+03:00")
public class Problem {
  @SerializedName("id")
  private String id = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("identity")
  private String identity = null;

  @SerializedName("href")
  private String href = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("mutes")
  private Mutes mutes = null;

  @SerializedName("investigations")
  private Investigations investigations = null;

  @SerializedName("problemOccurrences")
  private ProblemOccurrences problemOccurrences = null;

  @SerializedName("locator")
  private String locator = null;

  public Problem id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Problem type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Problem identity(String identity) {
    this.identity = identity;
    return this;
  }

   /**
   * Get identity
   * @return identity
  **/
  @ApiModelProperty(value = "")
  public String getIdentity() {
    return identity;
  }

  public void setIdentity(String identity) {
    this.identity = identity;
  }

  public Problem href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @ApiModelProperty(value = "")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public Problem description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Problem mutes(Mutes mutes) {
    this.mutes = mutes;
    return this;
  }

   /**
   * Get mutes
   * @return mutes
  **/
  @ApiModelProperty(value = "")
  public Mutes getMutes() {
    return mutes;
  }

  public void setMutes(Mutes mutes) {
    this.mutes = mutes;
  }

  public Problem investigations(Investigations investigations) {
    this.investigations = investigations;
    return this;
  }

   /**
   * Get investigations
   * @return investigations
  **/
  @ApiModelProperty(value = "")
  public Investigations getInvestigations() {
    return investigations;
  }

  public void setInvestigations(Investigations investigations) {
    this.investigations = investigations;
  }

  public Problem problemOccurrences(ProblemOccurrences problemOccurrences) {
    this.problemOccurrences = problemOccurrences;
    return this;
  }

   /**
   * Get problemOccurrences
   * @return problemOccurrences
  **/
  @ApiModelProperty(value = "")
  public ProblemOccurrences getProblemOccurrences() {
    return problemOccurrences;
  }

  public void setProblemOccurrences(ProblemOccurrences problemOccurrences) {
    this.problemOccurrences = problemOccurrences;
  }

  public Problem locator(String locator) {
    this.locator = locator;
    return this;
  }

   /**
   * Get locator
   * @return locator
  **/
  @ApiModelProperty(value = "")
  public String getLocator() {
    return locator;
  }

  public void setLocator(String locator) {
    this.locator = locator;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Problem problem = (Problem) o;
    return Objects.equals(this.id, problem.id) &&
        Objects.equals(this.type, problem.type) &&
        Objects.equals(this.identity, problem.identity) &&
        Objects.equals(this.href, problem.href) &&
        Objects.equals(this.description, problem.description) &&
        Objects.equals(this.mutes, problem.mutes) &&
        Objects.equals(this.investigations, problem.investigations) &&
        Objects.equals(this.problemOccurrences, problem.problemOccurrences) &&
        Objects.equals(this.locator, problem.locator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, identity, href, description, mutes, investigations, problemOccurrences, locator);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Problem {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    mutes: ").append(toIndentedString(mutes)).append("\n");
    sb.append("    investigations: ").append(toIndentedString(investigations)).append("\n");
    sb.append("    problemOccurrences: ").append(toIndentedString(problemOccurrences)).append("\n");
    sb.append("    locator: ").append(toIndentedString(locator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

