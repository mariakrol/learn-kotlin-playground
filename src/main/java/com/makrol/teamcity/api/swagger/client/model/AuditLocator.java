/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.makrol.teamcity.api.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents a locator string for filtering AuditEvent entities.
 */
@ApiModel(description = "Represents a locator string for filtering AuditEvent entities.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-14T01:07:21.722+03:00")
public class AuditLocator {
  @SerializedName("action")
  private String action = null;

  @SerializedName("affectedProject")
  private String affectedProject = null;

  @SerializedName("buildType")
  private String buildType = null;

  @SerializedName("count")
  private Integer count = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("item")
  private String item = null;

  @SerializedName("lookupLimit")
  private Integer lookupLimit = null;

  @SerializedName("start")
  private Integer start = null;

  @SerializedName("systemAction")
  private String systemAction = null;

  @SerializedName("user")
  private String user = null;

  public AuditLocator action(String action) {
    this.action = action;
    return this;
  }

   /**
   * Use &#x60;$help&#x60; to get the full list of supported actions.
   * @return action
  **/
  @ApiModelProperty(value = "Use `$help` to get the full list of supported actions.")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public AuditLocator affectedProject(String affectedProject) {
    this.affectedProject = affectedProject;
    return this;
  }

   /**
   * Related project locator.
   * @return affectedProject
  **/
  @ApiModelProperty(value = "Related project locator.")
  public String getAffectedProject() {
    return affectedProject;
  }

  public void setAffectedProject(String affectedProject) {
    this.affectedProject = affectedProject;
  }

  public AuditLocator buildType(String buildType) {
    this.buildType = buildType;
    return this;
  }

   /**
   * Related build type or template locator.
   * @return buildType
  **/
  @ApiModelProperty(value = "Related build type or template locator.")
  public String getBuildType() {
    return buildType;
  }

  public void setBuildType(String buildType) {
    this.buildType = buildType;
  }

  public AuditLocator count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * For paginated calls, how many entities to return per page.
   * @return count
  **/
  @ApiModelProperty(value = "For paginated calls, how many entities to return per page.")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public AuditLocator id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AuditLocator item(String item) {
    this.item = item;
    return this;
  }

   /**
   * Supply multiple locators and return a union of the results.
   * @return item
  **/
  @ApiModelProperty(value = "Supply multiple locators and return a union of the results.")
  public String getItem() {
    return item;
  }

  public void setItem(String item) {
    this.item = item;
  }

  public AuditLocator lookupLimit(Integer lookupLimit) {
    this.lookupLimit = lookupLimit;
    return this;
  }

   /**
   * Limit processing to the latest &#x60;&lt;lookupLimit&gt;&#x60; entities.
   * @return lookupLimit
  **/
  @ApiModelProperty(value = "Limit processing to the latest `<lookupLimit>` entities.")
  public Integer getLookupLimit() {
    return lookupLimit;
  }

  public void setLookupLimit(Integer lookupLimit) {
    this.lookupLimit = lookupLimit;
  }

  public AuditLocator start(Integer start) {
    this.start = start;
    return this;
  }

   /**
   * For paginated calls, from which entity to start rendering the page.
   * @return start
  **/
  @ApiModelProperty(value = "For paginated calls, from which entity to start rendering the page.")
  public Integer getStart() {
    return start;
  }

  public void setStart(Integer start) {
    this.start = start;
  }

  public AuditLocator systemAction(String systemAction) {
    this.systemAction = systemAction;
    return this;
  }

   /**
   * Get systemAction
   * @return systemAction
  **/
  @ApiModelProperty(value = "")
  public String getSystemAction() {
    return systemAction;
  }

  public void setSystemAction(String systemAction) {
    this.systemAction = systemAction;
  }

  public AuditLocator user(String user) {
    this.user = user;
    return this;
  }

   /**
   * Locator of user who caused the audit event.
   * @return user
  **/
  @ApiModelProperty(value = "Locator of user who caused the audit event.")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditLocator auditLocator = (AuditLocator) o;
    return Objects.equals(this.action, auditLocator.action) &&
        Objects.equals(this.affectedProject, auditLocator.affectedProject) &&
        Objects.equals(this.buildType, auditLocator.buildType) &&
        Objects.equals(this.count, auditLocator.count) &&
        Objects.equals(this.id, auditLocator.id) &&
        Objects.equals(this.item, auditLocator.item) &&
        Objects.equals(this.lookupLimit, auditLocator.lookupLimit) &&
        Objects.equals(this.start, auditLocator.start) &&
        Objects.equals(this.systemAction, auditLocator.systemAction) &&
        Objects.equals(this.user, auditLocator.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, affectedProject, buildType, count, id, item, lookupLimit, start, systemAction, user);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditLocator {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    affectedProject: ").append(toIndentedString(affectedProject)).append("\n");
    sb.append("    buildType: ").append(toIndentedString(buildType)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("    lookupLimit: ").append(toIndentedString(lookupLimit)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    systemAction: ").append(toIndentedString(systemAction)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

