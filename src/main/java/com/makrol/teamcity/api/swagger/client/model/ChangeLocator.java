/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.makrol.teamcity.api.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents a locator string for filtering Change entities.
 */
@ApiModel(description = "Represents a locator string for filtering Change entities.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-14T01:07:21.722+03:00")
public class ChangeLocator {
  @SerializedName("affectedProject")
  private String affectedProject = null;

  @SerializedName("build")
  private String build = null;

  @SerializedName("buildType")
  private String buildType = null;

  @SerializedName("comment")
  private String comment = null;

  @SerializedName("count")
  private Integer count = null;

  @SerializedName("file")
  private String file = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("internalVersion")
  private String internalVersion = null;

  @SerializedName("item")
  private String item = null;

  @SerializedName("pending")
  private Boolean pending = null;

  @SerializedName("project")
  private String project = null;

  @SerializedName("sinceChange")
  private String sinceChange = null;

  @SerializedName("start")
  private Integer start = null;

  @SerializedName("user")
  private String user = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("vcsRoot")
  private String vcsRoot = null;

  @SerializedName("vcsRootInstance")
  private String vcsRootInstance = null;

  @SerializedName("version")
  private String version = null;

  public ChangeLocator affectedProject(String affectedProject) {
    this.affectedProject = affectedProject;
    return this;
  }

   /**
   * Project (direct or indirect parent) locator.
   * @return affectedProject
  **/
  @ApiModelProperty(value = "Project (direct or indirect parent) locator.")
  public String getAffectedProject() {
    return affectedProject;
  }

  public void setAffectedProject(String affectedProject) {
    this.affectedProject = affectedProject;
  }

  public ChangeLocator build(String build) {
    this.build = build;
    return this;
  }

   /**
   * Build locator.
   * @return build
  **/
  @ApiModelProperty(value = "Build locator.")
  public String getBuild() {
    return build;
  }

  public void setBuild(String build) {
    this.build = build;
  }

  public ChangeLocator buildType(String buildType) {
    this.buildType = buildType;
    return this;
  }

   /**
   * Build type locator.
   * @return buildType
  **/
  @ApiModelProperty(value = "Build type locator.")
  public String getBuildType() {
    return buildType;
  }

  public void setBuildType(String buildType) {
    this.buildType = buildType;
  }

  public ChangeLocator comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @ApiModelProperty(value = "")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public ChangeLocator count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * For paginated calls, how many entities to return per page.
   * @return count
  **/
  @ApiModelProperty(value = "For paginated calls, how many entities to return per page.")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public ChangeLocator file(String file) {
    this.file = file;
    return this;
  }

   /**
   * Get file
   * @return file
  **/
  @ApiModelProperty(value = "")
  public String getFile() {
    return file;
  }

  public void setFile(String file) {
    this.file = file;
  }

  public ChangeLocator id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Entity ID.
   * @return id
  **/
  @ApiModelProperty(value = "Entity ID.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ChangeLocator internalVersion(String internalVersion) {
    this.internalVersion = internalVersion;
    return this;
  }

   /**
   * Get internalVersion
   * @return internalVersion
  **/
  @ApiModelProperty(value = "")
  public String getInternalVersion() {
    return internalVersion;
  }

  public void setInternalVersion(String internalVersion) {
    this.internalVersion = internalVersion;
  }

  public ChangeLocator item(String item) {
    this.item = item;
    return this;
  }

   /**
   * Supply multiple locators and return a union of the results.
   * @return item
  **/
  @ApiModelProperty(value = "Supply multiple locators and return a union of the results.")
  public String getItem() {
    return item;
  }

  public void setItem(String item) {
    this.item = item;
  }

  public ChangeLocator pending(Boolean pending) {
    this.pending = pending;
    return this;
  }

   /**
   * Is pending.
   * @return pending
  **/
  @ApiModelProperty(value = "Is pending.")
  public Boolean isPending() {
    return pending;
  }

  public void setPending(Boolean pending) {
    this.pending = pending;
  }

  public ChangeLocator project(String project) {
    this.project = project;
    return this;
  }

   /**
   * Project locator.
   * @return project
  **/
  @ApiModelProperty(value = "Project locator.")
  public String getProject() {
    return project;
  }

  public void setProject(String project) {
    this.project = project;
  }

  public ChangeLocator sinceChange(String sinceChange) {
    this.sinceChange = sinceChange;
    return this;
  }

   /**
   * Commit SHA since which the changes should be returned.
   * @return sinceChange
  **/
  @ApiModelProperty(value = "Commit SHA since which the changes should be returned.")
  public String getSinceChange() {
    return sinceChange;
  }

  public void setSinceChange(String sinceChange) {
    this.sinceChange = sinceChange;
  }

  public ChangeLocator start(Integer start) {
    this.start = start;
    return this;
  }

   /**
   * For paginated calls, from which entity to start rendering the page.
   * @return start
  **/
  @ApiModelProperty(value = "For paginated calls, from which entity to start rendering the page.")
  public Integer getStart() {
    return start;
  }

  public void setStart(Integer start) {
    this.start = start;
  }

  public ChangeLocator user(String user) {
    this.user = user;
    return this;
  }

   /**
   * User locator.
   * @return user
  **/
  @ApiModelProperty(value = "User locator.")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }

  public ChangeLocator username(String username) {
    this.username = username;
    return this;
  }

   /**
   * VCS side username.
   * @return username
  **/
  @ApiModelProperty(value = "VCS side username.")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public ChangeLocator vcsRoot(String vcsRoot) {
    this.vcsRoot = vcsRoot;
    return this;
  }

   /**
   * VCS root locator.
   * @return vcsRoot
  **/
  @ApiModelProperty(value = "VCS root locator.")
  public String getVcsRoot() {
    return vcsRoot;
  }

  public void setVcsRoot(String vcsRoot) {
    this.vcsRoot = vcsRoot;
  }

  public ChangeLocator vcsRootInstance(String vcsRootInstance) {
    this.vcsRootInstance = vcsRootInstance;
    return this;
  }

   /**
   * VCS instance locator.
   * @return vcsRootInstance
  **/
  @ApiModelProperty(value = "VCS instance locator.")
  public String getVcsRootInstance() {
    return vcsRootInstance;
  }

  public void setVcsRootInstance(String vcsRootInstance) {
    this.vcsRootInstance = vcsRootInstance;
  }

  public ChangeLocator version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangeLocator changeLocator = (ChangeLocator) o;
    return Objects.equals(this.affectedProject, changeLocator.affectedProject) &&
        Objects.equals(this.build, changeLocator.build) &&
        Objects.equals(this.buildType, changeLocator.buildType) &&
        Objects.equals(this.comment, changeLocator.comment) &&
        Objects.equals(this.count, changeLocator.count) &&
        Objects.equals(this.file, changeLocator.file) &&
        Objects.equals(this.id, changeLocator.id) &&
        Objects.equals(this.internalVersion, changeLocator.internalVersion) &&
        Objects.equals(this.item, changeLocator.item) &&
        Objects.equals(this.pending, changeLocator.pending) &&
        Objects.equals(this.project, changeLocator.project) &&
        Objects.equals(this.sinceChange, changeLocator.sinceChange) &&
        Objects.equals(this.start, changeLocator.start) &&
        Objects.equals(this.user, changeLocator.user) &&
        Objects.equals(this.username, changeLocator.username) &&
        Objects.equals(this.vcsRoot, changeLocator.vcsRoot) &&
        Objects.equals(this.vcsRootInstance, changeLocator.vcsRootInstance) &&
        Objects.equals(this.version, changeLocator.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affectedProject, build, buildType, comment, count, file, id, internalVersion, item, pending, project, sinceChange, start, user, username, vcsRoot, vcsRootInstance, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangeLocator {\n");
    
    sb.append("    affectedProject: ").append(toIndentedString(affectedProject)).append("\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    buildType: ").append(toIndentedString(buildType)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    internalVersion: ").append(toIndentedString(internalVersion)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("    pending: ").append(toIndentedString(pending)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    sinceChange: ").append(toIndentedString(sinceChange)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    vcsRoot: ").append(toIndentedString(vcsRoot)).append("\n");
    sb.append("    vcsRootInstance: ").append(toIndentedString(vcsRootInstance)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

