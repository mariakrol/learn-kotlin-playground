/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.makrol.teamcity.api.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents the specific file change (in the scope of the commit).
 */
@ApiModel(description = "Represents the specific file change (in the scope of the commit).")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-14T01:07:21.722+03:00")
public class FileChange {
  @SerializedName("before-revision")
  private String beforeRevision = null;

  @SerializedName("after-revision")
  private String afterRevision = null;

  @SerializedName("changeType")
  private String changeType = null;

  @SerializedName("changeTypeComment")
  private String changeTypeComment = null;

  @SerializedName("file")
  private String file = null;

  @SerializedName("relative-file")
  private String relativeFile = null;

  @SerializedName("directory")
  private Boolean directory = null;

  public FileChange beforeRevision(String beforeRevision) {
    this.beforeRevision = beforeRevision;
    return this;
  }

   /**
   * Get beforeRevision
   * @return beforeRevision
  **/
  @ApiModelProperty(value = "")
  public String getBeforeRevision() {
    return beforeRevision;
  }

  public void setBeforeRevision(String beforeRevision) {
    this.beforeRevision = beforeRevision;
  }

  public FileChange afterRevision(String afterRevision) {
    this.afterRevision = afterRevision;
    return this;
  }

   /**
   * Get afterRevision
   * @return afterRevision
  **/
  @ApiModelProperty(value = "")
  public String getAfterRevision() {
    return afterRevision;
  }

  public void setAfterRevision(String afterRevision) {
    this.afterRevision = afterRevision;
  }

  public FileChange changeType(String changeType) {
    this.changeType = changeType;
    return this;
  }

   /**
   * Get changeType
   * @return changeType
  **/
  @ApiModelProperty(value = "")
  public String getChangeType() {
    return changeType;
  }

  public void setChangeType(String changeType) {
    this.changeType = changeType;
  }

  public FileChange changeTypeComment(String changeTypeComment) {
    this.changeTypeComment = changeTypeComment;
    return this;
  }

   /**
   * Get changeTypeComment
   * @return changeTypeComment
  **/
  @ApiModelProperty(value = "")
  public String getChangeTypeComment() {
    return changeTypeComment;
  }

  public void setChangeTypeComment(String changeTypeComment) {
    this.changeTypeComment = changeTypeComment;
  }

  public FileChange file(String file) {
    this.file = file;
    return this;
  }

   /**
   * Get file
   * @return file
  **/
  @ApiModelProperty(value = "")
  public String getFile() {
    return file;
  }

  public void setFile(String file) {
    this.file = file;
  }

  public FileChange relativeFile(String relativeFile) {
    this.relativeFile = relativeFile;
    return this;
  }

   /**
   * Get relativeFile
   * @return relativeFile
  **/
  @ApiModelProperty(value = "")
  public String getRelativeFile() {
    return relativeFile;
  }

  public void setRelativeFile(String relativeFile) {
    this.relativeFile = relativeFile;
  }

  public FileChange directory(Boolean directory) {
    this.directory = directory;
    return this;
  }

   /**
   * Get directory
   * @return directory
  **/
  @ApiModelProperty(value = "")
  public Boolean isDirectory() {
    return directory;
  }

  public void setDirectory(Boolean directory) {
    this.directory = directory;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileChange fileChange = (FileChange) o;
    return Objects.equals(this.beforeRevision, fileChange.beforeRevision) &&
        Objects.equals(this.afterRevision, fileChange.afterRevision) &&
        Objects.equals(this.changeType, fileChange.changeType) &&
        Objects.equals(this.changeTypeComment, fileChange.changeTypeComment) &&
        Objects.equals(this.file, fileChange.file) &&
        Objects.equals(this.relativeFile, fileChange.relativeFile) &&
        Objects.equals(this.directory, fileChange.directory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(beforeRevision, afterRevision, changeType, changeTypeComment, file, relativeFile, directory);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileChange {\n");
    
    sb.append("    beforeRevision: ").append(toIndentedString(beforeRevision)).append("\n");
    sb.append("    afterRevision: ").append(toIndentedString(afterRevision)).append("\n");
    sb.append("    changeType: ").append(toIndentedString(changeType)).append("\n");
    sb.append("    changeTypeComment: ").append(toIndentedString(changeTypeComment)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    relativeFile: ").append(toIndentedString(relativeFile)).append("\n");
    sb.append("    directory: ").append(toIndentedString(directory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

