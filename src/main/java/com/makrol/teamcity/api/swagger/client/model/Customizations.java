/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.makrol.teamcity.api.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Represents build customizations (artifact dependency overrides, custom parameters or changesets).
 */
@ApiModel(description = "Represents build customizations (artifact dependency overrides, custom parameters or changesets).")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-14T01:07:21.722+03:00")
public class Customizations {
  @SerializedName("parameters")
  private Map<String, String> parameters = null;

  @SerializedName("changes")
  private Map<String, String> changes = null;

  @SerializedName("artifactDependencies")
  private Map<String, String> artifactDependencies = null;

  public Customizations parameters(Map<String, String> parameters) {
    this.parameters = parameters;
    return this;
  }

  public Customizations putParametersItem(String key, String parametersItem) {
    if (this.parameters == null) {
      this.parameters = new HashMap<String, String>();
    }
    this.parameters.put(key, parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getParameters() {
    return parameters;
  }

  public void setParameters(Map<String, String> parameters) {
    this.parameters = parameters;
  }

  public Customizations changes(Map<String, String> changes) {
    this.changes = changes;
    return this;
  }

  public Customizations putChangesItem(String key, String changesItem) {
    if (this.changes == null) {
      this.changes = new HashMap<String, String>();
    }
    this.changes.put(key, changesItem);
    return this;
  }

   /**
   * Get changes
   * @return changes
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getChanges() {
    return changes;
  }

  public void setChanges(Map<String, String> changes) {
    this.changes = changes;
  }

  public Customizations artifactDependencies(Map<String, String> artifactDependencies) {
    this.artifactDependencies = artifactDependencies;
    return this;
  }

  public Customizations putArtifactDependenciesItem(String key, String artifactDependenciesItem) {
    if (this.artifactDependencies == null) {
      this.artifactDependencies = new HashMap<String, String>();
    }
    this.artifactDependencies.put(key, artifactDependenciesItem);
    return this;
  }

   /**
   * Get artifactDependencies
   * @return artifactDependencies
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getArtifactDependencies() {
    return artifactDependencies;
  }

  public void setArtifactDependencies(Map<String, String> artifactDependencies) {
    this.artifactDependencies = artifactDependencies;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Customizations customizations = (Customizations) o;
    return Objects.equals(this.parameters, customizations.parameters) &&
        Objects.equals(this.changes, customizations.changes) &&
        Objects.equals(this.artifactDependencies, customizations.artifactDependencies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(parameters, changes, artifactDependencies);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Customizations {\n");
    
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    changes: ").append(toIndentedString(changes)).append("\n");
    sb.append("    artifactDependencies: ").append(toIndentedString(artifactDependencies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

