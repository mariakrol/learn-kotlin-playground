/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.makrol.teamcity.api.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents a locator string for filtering Build entities.
 */
@ApiModel(description = "Represents a locator string for filtering Build entities.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-14T01:07:21.722+03:00")
public class BuildQueueLocator {
  @SerializedName("agent")
  private String agent = null;

  @SerializedName("buildType")
  private String buildType = null;

  @SerializedName("count")
  private Integer count = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("item")
  private String item = null;

  @SerializedName("personal")
  private Boolean personal = null;

  @SerializedName("pool")
  private String pool = null;

  @SerializedName("project")
  private String project = null;

  @SerializedName("start")
  private Integer start = null;

  @SerializedName("taskId")
  private String taskId = null;

  @SerializedName("user")
  private String user = null;

  public BuildQueueLocator agent(String agent) {
    this.agent = agent;
    return this;
  }

   /**
   * Agent locator.
   * @return agent
  **/
  @ApiModelProperty(value = "Agent locator.")
  public String getAgent() {
    return agent;
  }

  public void setAgent(String agent) {
    this.agent = agent;
  }

  public BuildQueueLocator buildType(String buildType) {
    this.buildType = buildType;
    return this;
  }

   /**
   * Build type locator.
   * @return buildType
  **/
  @ApiModelProperty(value = "Build type locator.")
  public String getBuildType() {
    return buildType;
  }

  public void setBuildType(String buildType) {
    this.buildType = buildType;
  }

  public BuildQueueLocator count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * For paginated calls, how many entities to return per page.
   * @return count
  **/
  @ApiModelProperty(value = "For paginated calls, how many entities to return per page.")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public BuildQueueLocator id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Entity ID.
   * @return id
  **/
  @ApiModelProperty(value = "Entity ID.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public BuildQueueLocator item(String item) {
    this.item = item;
    return this;
  }

   /**
   * Supply multiple locators and return a union of the results.
   * @return item
  **/
  @ApiModelProperty(value = "Supply multiple locators and return a union of the results.")
  public String getItem() {
    return item;
  }

  public void setItem(String item) {
    this.item = item;
  }

  public BuildQueueLocator personal(Boolean personal) {
    this.personal = personal;
    return this;
  }

   /**
   * Is personal.
   * @return personal
  **/
  @ApiModelProperty(value = "Is personal.")
  public Boolean isPersonal() {
    return personal;
  }

  public void setPersonal(Boolean personal) {
    this.personal = personal;
  }

  public BuildQueueLocator pool(String pool) {
    this.pool = pool;
    return this;
  }

   /**
   * Agent pool locator.
   * @return pool
  **/
  @ApiModelProperty(value = "Agent pool locator.")
  public String getPool() {
    return pool;
  }

  public void setPool(String pool) {
    this.pool = pool;
  }

  public BuildQueueLocator project(String project) {
    this.project = project;
    return this;
  }

   /**
   * Project locator.
   * @return project
  **/
  @ApiModelProperty(value = "Project locator.")
  public String getProject() {
    return project;
  }

  public void setProject(String project) {
    this.project = project;
  }

  public BuildQueueLocator start(Integer start) {
    this.start = start;
    return this;
  }

   /**
   * For paginated calls, from which entity to start rendering the page.
   * @return start
  **/
  @ApiModelProperty(value = "For paginated calls, from which entity to start rendering the page.")
  public Integer getStart() {
    return start;
  }

  public void setStart(Integer start) {
    this.start = start;
  }

  public BuildQueueLocator taskId(String taskId) {
    this.taskId = taskId;
    return this;
  }

   /**
   * Get taskId
   * @return taskId
  **/
  @ApiModelProperty(value = "")
  public String getTaskId() {
    return taskId;
  }

  public void setTaskId(String taskId) {
    this.taskId = taskId;
  }

  public BuildQueueLocator user(String user) {
    this.user = user;
    return this;
  }

   /**
   * User locator.
   * @return user
  **/
  @ApiModelProperty(value = "User locator.")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuildQueueLocator buildQueueLocator = (BuildQueueLocator) o;
    return Objects.equals(this.agent, buildQueueLocator.agent) &&
        Objects.equals(this.buildType, buildQueueLocator.buildType) &&
        Objects.equals(this.count, buildQueueLocator.count) &&
        Objects.equals(this.id, buildQueueLocator.id) &&
        Objects.equals(this.item, buildQueueLocator.item) &&
        Objects.equals(this.personal, buildQueueLocator.personal) &&
        Objects.equals(this.pool, buildQueueLocator.pool) &&
        Objects.equals(this.project, buildQueueLocator.project) &&
        Objects.equals(this.start, buildQueueLocator.start) &&
        Objects.equals(this.taskId, buildQueueLocator.taskId) &&
        Objects.equals(this.user, buildQueueLocator.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agent, buildType, count, id, item, personal, pool, project, start, taskId, user);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuildQueueLocator {\n");
    
    sb.append("    agent: ").append(toIndentedString(agent)).append("\n");
    sb.append("    buildType: ").append(toIndentedString(buildType)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("    personal: ").append(toIndentedString(personal)).append("\n");
    sb.append("    pool: ").append(toIndentedString(pool)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

