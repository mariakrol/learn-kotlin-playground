/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.makrol.teamcity.api.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.makrol.teamcity.api.swagger.client.model.Comment;
import com.makrol.teamcity.api.swagger.client.model.ProblemScope;
import com.makrol.teamcity.api.swagger.client.model.ProblemTarget;
import com.makrol.teamcity.api.swagger.client.model.Resolution;
import com.makrol.teamcity.api.swagger.client.model.User;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents an investigation of a build problem.
 */
@ApiModel(description = "Represents an investigation of a build problem.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-14T01:07:21.722+03:00")
public class Investigation {
  @SerializedName("id")
  private String id = null;

  /**
   * Gets or Sets state
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    TAKEN("TAKEN"),
    
    FIXED("FIXED"),
    
    GIVEN_UP("GIVEN_UP"),
    
    NONE("NONE");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("href")
  private String href = null;

  @SerializedName("assignee")
  private User assignee = null;

  @SerializedName("assignment")
  private Comment assignment = null;

  @SerializedName("scope")
  private ProblemScope scope = null;

  @SerializedName("target")
  private ProblemTarget target = null;

  @SerializedName("resolution")
  private Resolution resolution = null;

  @SerializedName("responsible")
  private User responsible = null;

  public Investigation id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Investigation state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public Investigation href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Get href
   * @return href
  **/
  @ApiModelProperty(value = "")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public Investigation assignee(User assignee) {
    this.assignee = assignee;
    return this;
  }

   /**
   * Get assignee
   * @return assignee
  **/
  @ApiModelProperty(value = "")
  public User getAssignee() {
    return assignee;
  }

  public void setAssignee(User assignee) {
    this.assignee = assignee;
  }

  public Investigation assignment(Comment assignment) {
    this.assignment = assignment;
    return this;
  }

   /**
   * Get assignment
   * @return assignment
  **/
  @ApiModelProperty(value = "")
  public Comment getAssignment() {
    return assignment;
  }

  public void setAssignment(Comment assignment) {
    this.assignment = assignment;
  }

  public Investigation scope(ProblemScope scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @ApiModelProperty(value = "")
  public ProblemScope getScope() {
    return scope;
  }

  public void setScope(ProblemScope scope) {
    this.scope = scope;
  }

  public Investigation target(ProblemTarget target) {
    this.target = target;
    return this;
  }

   /**
   * Get target
   * @return target
  **/
  @ApiModelProperty(value = "")
  public ProblemTarget getTarget() {
    return target;
  }

  public void setTarget(ProblemTarget target) {
    this.target = target;
  }

  public Investigation resolution(Resolution resolution) {
    this.resolution = resolution;
    return this;
  }

   /**
   * Get resolution
   * @return resolution
  **/
  @ApiModelProperty(value = "")
  public Resolution getResolution() {
    return resolution;
  }

  public void setResolution(Resolution resolution) {
    this.resolution = resolution;
  }

  public Investigation responsible(User responsible) {
    this.responsible = responsible;
    return this;
  }

   /**
   * Get responsible
   * @return responsible
  **/
  @ApiModelProperty(value = "")
  public User getResponsible() {
    return responsible;
  }

  public void setResponsible(User responsible) {
    this.responsible = responsible;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Investigation investigation = (Investigation) o;
    return Objects.equals(this.id, investigation.id) &&
        Objects.equals(this.state, investigation.state) &&
        Objects.equals(this.href, investigation.href) &&
        Objects.equals(this.assignee, investigation.assignee) &&
        Objects.equals(this.assignment, investigation.assignment) &&
        Objects.equals(this.scope, investigation.scope) &&
        Objects.equals(this.target, investigation.target) &&
        Objects.equals(this.resolution, investigation.resolution) &&
        Objects.equals(this.responsible, investigation.responsible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, state, href, assignee, assignment, scope, target, resolution, responsible);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Investigation {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    assignee: ").append(toIndentedString(assignee)).append("\n");
    sb.append("    assignment: ").append(toIndentedString(assignment)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    resolution: ").append(toIndentedString(resolution)).append("\n");
    sb.append("    responsible: ").append(toIndentedString(responsible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

