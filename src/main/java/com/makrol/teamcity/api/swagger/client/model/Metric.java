/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.makrol.teamcity.api.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.makrol.teamcity.api.swagger.client.model.MetricTags;
import com.makrol.teamcity.api.swagger.client.model.MetricValues;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents the specific server metric.
 */
@ApiModel(description = "Represents the specific server metric.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-14T01:07:21.722+03:00")
public class Metric {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("prometheusName")
  private String prometheusName = null;

  @SerializedName("metricValues")
  private MetricValues metricValues = null;

  @SerializedName("metricTags")
  private MetricTags metricTags = null;

  public Metric name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Metric description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Metric prometheusName(String prometheusName) {
    this.prometheusName = prometheusName;
    return this;
  }

   /**
   * Get prometheusName
   * @return prometheusName
  **/
  @ApiModelProperty(value = "")
  public String getPrometheusName() {
    return prometheusName;
  }

  public void setPrometheusName(String prometheusName) {
    this.prometheusName = prometheusName;
  }

  public Metric metricValues(MetricValues metricValues) {
    this.metricValues = metricValues;
    return this;
  }

   /**
   * Get metricValues
   * @return metricValues
  **/
  @ApiModelProperty(value = "")
  public MetricValues getMetricValues() {
    return metricValues;
  }

  public void setMetricValues(MetricValues metricValues) {
    this.metricValues = metricValues;
  }

  public Metric metricTags(MetricTags metricTags) {
    this.metricTags = metricTags;
    return this;
  }

   /**
   * Get metricTags
   * @return metricTags
  **/
  @ApiModelProperty(value = "")
  public MetricTags getMetricTags() {
    return metricTags;
  }

  public void setMetricTags(MetricTags metricTags) {
    this.metricTags = metricTags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Metric metric = (Metric) o;
    return Objects.equals(this.name, metric.name) &&
        Objects.equals(this.description, metric.description) &&
        Objects.equals(this.prometheusName, metric.prometheusName) &&
        Objects.equals(this.metricValues, metric.metricValues) &&
        Objects.equals(this.metricTags, metric.metricTags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, prometheusName, metricValues, metricTags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Metric {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    prometheusName: ").append(toIndentedString(prometheusName)).append("\n");
    sb.append("    metricValues: ").append(toIndentedString(metricValues)).append("\n");
    sb.append("    metricTags: ").append(toIndentedString(metricTags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

