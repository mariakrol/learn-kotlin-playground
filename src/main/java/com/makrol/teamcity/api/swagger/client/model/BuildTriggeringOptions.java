/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.makrol.teamcity.api.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.makrol.teamcity.api.swagger.client.model.BuildTypes;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents the dependency/queue settings with which this build has been started.
 */
@ApiModel(description = "Represents the dependency/queue settings with which this build has been started.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-14T01:07:21.722+03:00")
public class BuildTriggeringOptions {
  @SerializedName("cleanSources")
  private Boolean cleanSources = null;

  @SerializedName("cleanSourcesInAllDependencies")
  private Boolean cleanSourcesInAllDependencies = null;

  @SerializedName("rebuildAllDependencies")
  private Boolean rebuildAllDependencies = null;

  @SerializedName("rebuildFailedOrIncompleteDependencies")
  private Boolean rebuildFailedOrIncompleteDependencies = null;

  @SerializedName("queueAtTop")
  private Boolean queueAtTop = null;

  @SerializedName("freezeSettings")
  private Boolean freezeSettings = null;

  @SerializedName("tagDependencies")
  private Boolean tagDependencies = null;

  @SerializedName("rebuildDependencies")
  private BuildTypes rebuildDependencies = null;

  public BuildTriggeringOptions cleanSources(Boolean cleanSources) {
    this.cleanSources = cleanSources;
    return this;
  }

   /**
   * Get cleanSources
   * @return cleanSources
  **/
  @ApiModelProperty(value = "")
  public Boolean isCleanSources() {
    return cleanSources;
  }

  public void setCleanSources(Boolean cleanSources) {
    this.cleanSources = cleanSources;
  }

  public BuildTriggeringOptions cleanSourcesInAllDependencies(Boolean cleanSourcesInAllDependencies) {
    this.cleanSourcesInAllDependencies = cleanSourcesInAllDependencies;
    return this;
  }

   /**
   * Get cleanSourcesInAllDependencies
   * @return cleanSourcesInAllDependencies
  **/
  @ApiModelProperty(value = "")
  public Boolean isCleanSourcesInAllDependencies() {
    return cleanSourcesInAllDependencies;
  }

  public void setCleanSourcesInAllDependencies(Boolean cleanSourcesInAllDependencies) {
    this.cleanSourcesInAllDependencies = cleanSourcesInAllDependencies;
  }

  public BuildTriggeringOptions rebuildAllDependencies(Boolean rebuildAllDependencies) {
    this.rebuildAllDependencies = rebuildAllDependencies;
    return this;
  }

   /**
   * Get rebuildAllDependencies
   * @return rebuildAllDependencies
  **/
  @ApiModelProperty(value = "")
  public Boolean isRebuildAllDependencies() {
    return rebuildAllDependencies;
  }

  public void setRebuildAllDependencies(Boolean rebuildAllDependencies) {
    this.rebuildAllDependencies = rebuildAllDependencies;
  }

  public BuildTriggeringOptions rebuildFailedOrIncompleteDependencies(Boolean rebuildFailedOrIncompleteDependencies) {
    this.rebuildFailedOrIncompleteDependencies = rebuildFailedOrIncompleteDependencies;
    return this;
  }

   /**
   * Get rebuildFailedOrIncompleteDependencies
   * @return rebuildFailedOrIncompleteDependencies
  **/
  @ApiModelProperty(value = "")
  public Boolean isRebuildFailedOrIncompleteDependencies() {
    return rebuildFailedOrIncompleteDependencies;
  }

  public void setRebuildFailedOrIncompleteDependencies(Boolean rebuildFailedOrIncompleteDependencies) {
    this.rebuildFailedOrIncompleteDependencies = rebuildFailedOrIncompleteDependencies;
  }

  public BuildTriggeringOptions queueAtTop(Boolean queueAtTop) {
    this.queueAtTop = queueAtTop;
    return this;
  }

   /**
   * Get queueAtTop
   * @return queueAtTop
  **/
  @ApiModelProperty(value = "")
  public Boolean isQueueAtTop() {
    return queueAtTop;
  }

  public void setQueueAtTop(Boolean queueAtTop) {
    this.queueAtTop = queueAtTop;
  }

  public BuildTriggeringOptions freezeSettings(Boolean freezeSettings) {
    this.freezeSettings = freezeSettings;
    return this;
  }

   /**
   * Get freezeSettings
   * @return freezeSettings
  **/
  @ApiModelProperty(value = "")
  public Boolean isFreezeSettings() {
    return freezeSettings;
  }

  public void setFreezeSettings(Boolean freezeSettings) {
    this.freezeSettings = freezeSettings;
  }

  public BuildTriggeringOptions tagDependencies(Boolean tagDependencies) {
    this.tagDependencies = tagDependencies;
    return this;
  }

   /**
   * Get tagDependencies
   * @return tagDependencies
  **/
  @ApiModelProperty(value = "")
  public Boolean isTagDependencies() {
    return tagDependencies;
  }

  public void setTagDependencies(Boolean tagDependencies) {
    this.tagDependencies = tagDependencies;
  }

  public BuildTriggeringOptions rebuildDependencies(BuildTypes rebuildDependencies) {
    this.rebuildDependencies = rebuildDependencies;
    return this;
  }

   /**
   * Get rebuildDependencies
   * @return rebuildDependencies
  **/
  @ApiModelProperty(value = "")
  public BuildTypes getRebuildDependencies() {
    return rebuildDependencies;
  }

  public void setRebuildDependencies(BuildTypes rebuildDependencies) {
    this.rebuildDependencies = rebuildDependencies;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuildTriggeringOptions buildTriggeringOptions = (BuildTriggeringOptions) o;
    return Objects.equals(this.cleanSources, buildTriggeringOptions.cleanSources) &&
        Objects.equals(this.cleanSourcesInAllDependencies, buildTriggeringOptions.cleanSourcesInAllDependencies) &&
        Objects.equals(this.rebuildAllDependencies, buildTriggeringOptions.rebuildAllDependencies) &&
        Objects.equals(this.rebuildFailedOrIncompleteDependencies, buildTriggeringOptions.rebuildFailedOrIncompleteDependencies) &&
        Objects.equals(this.queueAtTop, buildTriggeringOptions.queueAtTop) &&
        Objects.equals(this.freezeSettings, buildTriggeringOptions.freezeSettings) &&
        Objects.equals(this.tagDependencies, buildTriggeringOptions.tagDependencies) &&
        Objects.equals(this.rebuildDependencies, buildTriggeringOptions.rebuildDependencies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cleanSources, cleanSourcesInAllDependencies, rebuildAllDependencies, rebuildFailedOrIncompleteDependencies, queueAtTop, freezeSettings, tagDependencies, rebuildDependencies);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuildTriggeringOptions {\n");
    
    sb.append("    cleanSources: ").append(toIndentedString(cleanSources)).append("\n");
    sb.append("    cleanSourcesInAllDependencies: ").append(toIndentedString(cleanSourcesInAllDependencies)).append("\n");
    sb.append("    rebuildAllDependencies: ").append(toIndentedString(rebuildAllDependencies)).append("\n");
    sb.append("    rebuildFailedOrIncompleteDependencies: ").append(toIndentedString(rebuildFailedOrIncompleteDependencies)).append("\n");
    sb.append("    queueAtTop: ").append(toIndentedString(queueAtTop)).append("\n");
    sb.append("    freezeSettings: ").append(toIndentedString(freezeSettings)).append("\n");
    sb.append("    tagDependencies: ").append(toIndentedString(tagDependencies)).append("\n");
    sb.append("    rebuildDependencies: ").append(toIndentedString(rebuildDependencies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

