/*
 * TeamCity REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2018.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.makrol.teamcity.api.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.makrol.teamcity.api.swagger.client.model.Builds;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents a branch version.
 */
@ApiModel(description = "Represents a branch version.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-01-14T01:07:21.722+03:00")
public class BranchVersion {
  @SerializedName("version")
  private String version = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("default")
  private Boolean _default = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("internalName")
  private String internalName = null;

  @SerializedName("lastActivity")
  private String lastActivity = null;

  @SerializedName("builds")
  private Builds builds = null;

  @SerializedName("groupFlag")
  private Boolean groupFlag = null;

  @SerializedName("unspecified")
  private Boolean unspecified = null;

  public BranchVersion version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public BranchVersion name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public BranchVersion _default(Boolean _default) {
    this._default = _default;
    return this;
  }

   /**
   * Get _default
   * @return _default
  **/
  @ApiModelProperty(value = "")
  public Boolean isDefault() {
    return _default;
  }

  public void setDefault(Boolean _default) {
    this._default = _default;
  }

  public BranchVersion active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public BranchVersion internalName(String internalName) {
    this.internalName = internalName;
    return this;
  }

   /**
   * Get internalName
   * @return internalName
  **/
  @ApiModelProperty(value = "")
  public String getInternalName() {
    return internalName;
  }

  public void setInternalName(String internalName) {
    this.internalName = internalName;
  }

  public BranchVersion lastActivity(String lastActivity) {
    this.lastActivity = lastActivity;
    return this;
  }

   /**
   * Get lastActivity
   * @return lastActivity
  **/
  @ApiModelProperty(value = "")
  public String getLastActivity() {
    return lastActivity;
  }

  public void setLastActivity(String lastActivity) {
    this.lastActivity = lastActivity;
  }

  public BranchVersion builds(Builds builds) {
    this.builds = builds;
    return this;
  }

   /**
   * Get builds
   * @return builds
  **/
  @ApiModelProperty(value = "")
  public Builds getBuilds() {
    return builds;
  }

  public void setBuilds(Builds builds) {
    this.builds = builds;
  }

  public BranchVersion groupFlag(Boolean groupFlag) {
    this.groupFlag = groupFlag;
    return this;
  }

   /**
   * Get groupFlag
   * @return groupFlag
  **/
  @ApiModelProperty(value = "")
  public Boolean isGroupFlag() {
    return groupFlag;
  }

  public void setGroupFlag(Boolean groupFlag) {
    this.groupFlag = groupFlag;
  }

  public BranchVersion unspecified(Boolean unspecified) {
    this.unspecified = unspecified;
    return this;
  }

   /**
   * Get unspecified
   * @return unspecified
  **/
  @ApiModelProperty(value = "")
  public Boolean isUnspecified() {
    return unspecified;
  }

  public void setUnspecified(Boolean unspecified) {
    this.unspecified = unspecified;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BranchVersion branchVersion = (BranchVersion) o;
    return Objects.equals(this.version, branchVersion.version) &&
        Objects.equals(this.name, branchVersion.name) &&
        Objects.equals(this._default, branchVersion._default) &&
        Objects.equals(this.active, branchVersion.active) &&
        Objects.equals(this.internalName, branchVersion.internalName) &&
        Objects.equals(this.lastActivity, branchVersion.lastActivity) &&
        Objects.equals(this.builds, branchVersion.builds) &&
        Objects.equals(this.groupFlag, branchVersion.groupFlag) &&
        Objects.equals(this.unspecified, branchVersion.unspecified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, name, _default, active, internalName, lastActivity, builds, groupFlag, unspecified);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BranchVersion {\n");
    
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    internalName: ").append(toIndentedString(internalName)).append("\n");
    sb.append("    lastActivity: ").append(toIndentedString(lastActivity)).append("\n");
    sb.append("    builds: ").append(toIndentedString(builds)).append("\n");
    sb.append("    groupFlag: ").append(toIndentedString(groupFlag)).append("\n");
    sb.append("    unspecified: ").append(toIndentedString(unspecified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

